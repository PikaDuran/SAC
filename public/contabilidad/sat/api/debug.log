2025-08-27 03:02:04 - Solicitud recibida
2025-08-27 03:02:04 - Conexión BD OK
2025-08-27 03:02:04 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:04 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:04 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:04 - Resultados: 100
2025-08-27 03:02:04 - Response preparado
2025-08-27 03:02:06 - Solicitud recibida
2025-08-27 03:02:06 - Conexión BD OK
2025-08-27 03:02:06 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:06 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:06 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:06 - Resultados: 100
2025-08-27 03:02:06 - Response preparado
2025-08-27 03:02:06 - Solicitud recibida
2025-08-27 03:02:06 - Conexión BD OK
2025-08-27 03:02:06 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:06 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:06 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:06 - Resultados: 100
2025-08-27 03:02:06 - Response preparado
2025-08-27 03:02:07 - Solicitud recibida
2025-08-27 03:02:07 - Conexión BD OK
2025-08-27 03:02:07 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:07 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:07 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:07 - Resultados: 100
2025-08-27 03:02:07 - Response preparado
2025-08-27 03:02:07 - Solicitud recibida
2025-08-27 03:02:07 - Conexión BD OK
2025-08-27 03:02:07 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:07 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:07 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:07 - Resultados: 100
2025-08-27 03:02:07 - Response preparado
2025-08-27 03:02:08 - Solicitud recibida
2025-08-27 03:02:08 - Conexión BD OK
2025-08-27 03:02:08 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:08 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:08 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:08 - Resultados: 100
2025-08-27 03:02:08 - Response preparado
2025-08-27 03:02:08 - Solicitud recibida
2025-08-27 03:02:08 - Conexión BD OK
2025-08-27 03:02:08 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:08 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:08 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:08 - Resultados: 100
2025-08-27 03:02:08 - Response preparado
2025-08-27 03:02:08 - Solicitud recibida
2025-08-27 03:02:08 - Conexión BD OK
2025-08-27 03:02:08 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:08 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:08 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:08 - Resultados: 100
2025-08-27 03:02:08 - Response preparado
2025-08-27 03:02:08 - Solicitud recibida
2025-08-27 03:02:08 - Conexión BD OK
2025-08-27 03:02:08 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:08 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:08 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:08 - Resultados: 100
2025-08-27 03:02:08 - Response preparado
2025-08-27 03:02:08 - Solicitud recibida
2025-08-27 03:02:08 - Conexión BD OK
2025-08-27 03:02:08 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:08 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:08 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:08 - Resultados: 100
2025-08-27 03:02:08 - Response preparado
2025-08-27 03:02:08 - Solicitud recibida
2025-08-27 03:02:08 - Conexión BD OK
2025-08-27 03:02:08 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:08 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:08 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:08 - Resultados: 100
2025-08-27 03:02:08 - Response preparado
2025-08-27 03:02:09 - Solicitud recibida
2025-08-27 03:02:09 - Conexión BD OK
2025-08-27 03:02:09 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:09 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:09 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:09 - Resultados: 100
2025-08-27 03:02:09 - Response preparado
2025-08-27 03:02:09 - Solicitud recibida
2025-08-27 03:02:09 - Conexión BD OK
2025-08-27 03:02:09 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:09 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:09 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:09 - Resultados: 100
2025-08-27 03:02:09 - Response preparado
2025-08-27 03:02:09 - Solicitud recibida
2025-08-27 03:02:09 - Conexión BD OK
2025-08-27 03:02:09 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:09 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:09 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-26"}
2025-08-27 03:02:09 - Resultados: 100
2025-08-27 03:02:09 - Response preparado
2025-08-27 03:02:33 - Solicitud recibida
2025-08-27 03:02:33 - Conexión BD OK
2025-08-27 03:02:33 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2020-02-01 a 2020-02-01","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:33 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:33 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-02-01",":fecha_fin":"2020-02-01"}
2025-08-27 03:02:35 - Resultados: 5
2025-08-27 03:02:35 - Response preparado
2025-08-27 03:02:58 - Solicitud recibida
2025-08-27 03:02:58 - Conexión BD OK
2025-08-27 03:02:58 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2025-08-01 a 2025-08-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:02:58 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:02:58 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-31"}
2025-08-27 03:03:00 - Resultados: 3
2025-08-27 03:03:00 - Response preparado
2025-08-27 03:03:05 - Solicitud recibida
2025-08-27 03:03:05 - Conexión BD OK
2025-08-27 03:03:05 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:03:05 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:03:05 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 03:03:05 - Resultados: 100
2025-08-27 03:03:05 - Response preparado
2025-08-27 03:03:37 - Solicitud recibida
2025-08-27 03:03:37 - Conexión BD OK
2025-08-27 03:03:37 - Filtros: {"tipoReporte":"general","rfc":"BFM170822P38","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:03:37 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:03:37 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 03:03:37 - Resultados: 100
2025-08-27 03:03:37 - Response preparado
2025-08-27 03:04:14 - Solicitud recibida
2025-08-27 03:04:14 - Conexión BD OK
2025-08-27 03:04:14 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"BLM1706026AA","fechas":"","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:04:14 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:04:14 - Params: {":rfc":"BLM1706026AA"}
2025-08-27 03:04:14 - Resultados: 100
2025-08-27 03:04:14 - Response preparado
2025-08-27 03:04:24 - Solicitud recibida
2025-08-27 03:04:24 - Conexión BD OK
2025-08-27 03:04:24 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"BLM1706026AA","fechas":"2025-08-01 a 2025-08-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:04:24 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:04:24 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-31"}
2025-08-27 03:04:25 - Resultados: 3
2025-08-27 03:04:25 - Response preparado
2025-08-27 03:04:31 - Solicitud recibida
2025-08-27 03:04:31 - Conexión BD OK
2025-08-27 03:04:31 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"BLM1706026AA","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:04:31 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:04:31 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 03:04:32 - Resultados: 100
2025-08-27 03:04:32 - Response preparado
2025-08-27 03:04:38 - Solicitud recibida
2025-08-27 03:04:38 - Conexión BD OK
2025-08-27 03:04:39 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"BFM170822P38","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:04:39 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:04:39 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 03:04:39 - Resultados: 100
2025-08-27 03:04:39 - Response preparado
2025-08-27 03:05:35 - Solicitud recibida
2025-08-27 03:05:35 - Conexión BD OK
2025-08-27 03:05:35 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:05:35 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:05:35 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 03:05:35 - Resultados: 100
2025-08-27 03:05:35 - Response preparado
2025-08-27 03:06:18 - Solicitud recibida
2025-08-27 03:06:18 - Conexión BD OK
2025-08-27 03:06:18 - Filtros: {"tipoReporte":"general","rfc":"","fechas":"2025-07-27 a 2025-08-26","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 03:06:18 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:06:18 - Params: {":fecha_inicio":"2025-07-27",":fecha_fin":"2025-08-26"}
2025-08-27 03:06:18 - Resultados: 100
2025-08-27 03:06:18 - Response preparado
2025-08-27 03:07:11 - Solicitud recibida
2025-08-27 03:07:11 - Conexión BD OK
2025-08-27 03:07:11 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"03","metodoPago":"","usoCfdi":""}
2025-08-27 03:07:11 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 03:07:11 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 03:07:12 - Resultados: 100
2025-08-27 03:07:12 - Response preparado
2025-08-27 18:28:15 - Solicitud recibida
2025-08-27 18:28:15 - Conexión BD OK
2025-08-27 18:28:15 - Filtros: {"tipoReporte":"general","rfc":"","fechas":"","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 18:28:15 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL ORDER BY c.fecha DESC LIMIT 100
2025-08-27 18:28:15 - Params: []
2025-08-27 18:28:16 - Resultados: 100
2025-08-27 18:28:16 - Response preparado
2025-08-27 18:42:13 - Solicitud recibida
2025-08-27 18:42:13 - Conexión BD OK
2025-08-27 18:42:13 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"BFM170822P38","fechas":"2025-08-01 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 18:42:13 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 18:42:13 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-27"}
2025-08-27 18:42:13 - Resultados: 57
2025-08-27 18:42:13 - Response preparado
2025-08-27 18:43:20 - Solicitud recibida
2025-08-27 18:43:20 - Conexión BD OK
2025-08-27 18:43:20 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"","fechas":"2025-08-01 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 18:43:20 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 18:43:20 - Params: {":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-27"}
2025-08-27 18:43:21 - Resultados: 92
2025-08-27 18:43:21 - Response preparado
2025-08-27 18:43:42 - Solicitud recibida
2025-08-27 18:43:42 - Conexión BD OK
2025-08-27 18:43:42 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"","fechas":"2025-08-01 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 18:43:42 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 18:43:42 - Params: {":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-27"}
2025-08-27 18:43:44 - Resultados: 92
2025-08-27 18:43:44 - Response preparado
2025-08-27 18:43:59 - Solicitud recibida
2025-08-27 18:43:59 - Conexión BD OK
2025-08-27 18:43:59 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"","fechas":"2020-01-01 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 18:43:59 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 18:43:59 - Params: {":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-27"}
2025-08-27 18:43:59 - Resultados: 100
2025-08-27 18:43:59 - Response preparado
2025-08-27 18:44:01 - Solicitud recibida
2025-08-27 18:44:01 - Conexión BD OK
2025-08-27 18:44:01 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"","fechas":"2020-01-01 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 18:44:01 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 18:44:01 - Params: {":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-27"}
2025-08-27 18:44:01 - Resultados: 100
2025-08-27 18:44:01 - Response preparado
2025-08-27 18:44:25 - Solicitud recibida
2025-08-27 18:44:25 - Conexión BD OK
2025-08-27 18:44:25 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"BFM170822P38","fechas":"2020-01-01 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 18:44:25 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 18:44:25 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-27"}
2025-08-27 18:44:25 - Resultados: 100
2025-08-27 18:44:25 - Response preparado
2025-08-27 18:44:48 - Solicitud recibida
2025-08-27 18:44:48 - Conexión BD OK
2025-08-27 18:44:48 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"BLM1706026AA","fechas":"2020-01-01 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 18:44:48 - SQL: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 100
2025-08-27 18:44:48 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-27"}
2025-08-27 18:44:49 - Resultados: 100
2025-08-27 18:44:49 - Response preparado
2025-08-27 18:49:54 - Solicitud recibida
2025-08-27 18:49:54 - Conexión BD OK
2025-08-27 18:49:54 - Filtros: {"tipoReporte":"rfc_emisor","fechas":"2020-01-01 a 2025-08-27","rfc":"BFM170822P38"}
2025-08-27 18:49:54 - SQL Stats: SELECT 
                    COUNT(*) as total_cfdis,
                    SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                    AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                    c.tipo_comprobante,
                    COUNT(*) as cantidad_por_tipo
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 18:49:54 - SQL Data: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 18:49:54 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-27"}
2025-08-27 18:49:55 - Resultados tabla: 500
2025-08-27 18:49:55 - Resultados stats: 4
2025-08-27 18:49:55 - Response preparado
2025-08-27 18:51:12 - Solicitud recibida
2025-08-27 18:51:12 - Conexión BD OK
2025-08-27 18:51:12 - Filtros: {"tipoReporte":"rfc_emisor","fechas":"2020-01-01 a 2025-08-27","rfc":"BLM1706026AA"}
2025-08-27 18:51:12 - SQL Stats: SELECT 
                    COUNT(*) as total_cfdis,
                    SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                    AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                    c.tipo_comprobante,
                    COUNT(*) as cantidad_por_tipo
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 18:51:12 - SQL Data: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 18:51:12 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-27"}
2025-08-27 18:51:13 - Resultados tabla: 500
2025-08-27 18:51:13 - Resultados stats: 4
2025-08-27 18:51:14 - Response preparado
2025-08-27 18:52:07 - Solicitud recibida
2025-08-27 18:52:07 - Conexión BD OK
2025-08-27 18:52:07 - Filtros: {"tipoReporte":"general","rfc":"","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 18:52:07 - SQL Stats: SELECT 
                    COUNT(*) as total_cfdis,
                    SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                    AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                    c.tipo_comprobante,
                    COUNT(*) as cantidad_por_tipo
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 18:52:07 - SQL Data: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 18:52:07 - Params: {":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 18:52:09 - Resultados tabla: 147
2025-08-27 18:52:09 - Resultados stats: 4
2025-08-27 18:52:15 - Response preparado
2025-08-27 19:06:59 - Solicitud recibida
2025-08-27 19:06:59 - Conexión BD OK
2025-08-27 19:06:59 - Filtros: {"fechas":"2020-01-01 a 2025-08-27","tipoReporte":"rfc_emisor"}
2025-08-27 19:07:06 - Solicitud recibida
2025-08-27 19:07:06 - Conexión BD OK
2025-08-27 19:07:06 - Filtros: {"tipoReporte":"rfc_emisor","fechas":"2020-01-01 a 2025-08-27","rfc":""}
2025-08-27 19:07:11 - Solicitud recibida
2025-08-27 19:07:11 - Conexión BD OK
2025-08-27 19:07:11 - Filtros: {"tipoReporte":"rfc_emisor","fechas":"2020-01-01 a 2025-08-27","rfc":"BFM170822P38"}
2025-08-27 19:07:11 - SQL Stats: SELECT 
                    COUNT(*) as total_cfdis,
                    SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                    AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                    c.tipo_comprobante,
                    COUNT(*) as cantidad_por_tipo
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:07:11 - SQL Data: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:07:11 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-27"}
2025-08-27 19:07:12 - Resultados tabla: 500
2025-08-27 19:07:12 - Resultados stats: 4
2025-08-27 19:07:12 - Response preparado
2025-08-27 19:07:53 - Solicitud recibida
2025-08-27 19:07:53 - Conexión BD OK
2025-08-27 19:07:53 - Filtros: {"tipoReporte":"general","rfc":"BFM170822P38","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:07:53 - SQL Stats: SELECT 
                    COUNT(*) as total_cfdis,
                    SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                    AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                    c.tipo_comprobante,
                    COUNT(*) as cantidad_por_tipo
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:07:53 - SQL Data: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:07:53 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 19:07:54 - Resultados tabla: 148
2025-08-27 19:07:54 - Resultados stats: 4
2025-08-27 19:07:59 - Response preparado
2025-08-27 19:08:18 - Solicitud recibida
2025-08-27 19:08:18 - Conexión BD OK
2025-08-27 19:08:18 - Filtros: {"tipoReporte":"general","rfc":"BLM1706026AA","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:08:18 - SQL Stats: SELECT 
                    COUNT(*) as total_cfdis,
                    SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                    AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                    c.tipo_comprobante,
                    COUNT(*) as cantidad_por_tipo
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:08:18 - SQL Data: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:08:18 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 19:08:20 - Resultados tabla: 418
2025-08-27 19:08:20 - Resultados stats: 4
2025-08-27 19:08:25 - Response preparado
2025-08-27 19:10:44 - Solicitud recibida
2025-08-27 19:10:44 - Conexión BD OK
2025-08-27 19:10:44 - Filtros: {"tipoReporte":"rfc_receptor","rfc":"BLM1706026AA","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:10:44 - SQL Stats: SELECT 
                    COUNT(*) as total_cfdis,
                    SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                    AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                    c.tipo_comprobante,
                    COUNT(*) as cantidad_por_tipo
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:10:44 - SQL Data: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:10:44 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 19:10:48 - Resultados tabla: 418
2025-08-27 19:10:48 - Resultados stats: 4
2025-08-27 19:10:59 - Response preparado
2025-08-27 19:11:03 - Solicitud recibida
2025-08-27 19:11:04 - Conexión BD OK
2025-08-27 19:11:04 - Filtros: {"tipoReporte":"rfc_emisor","rfc":"BLM1706026AA","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:11:04 - SQL Stats: SELECT 
                    COUNT(*) as total_cfdis,
                    SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                    AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                    c.tipo_comprobante,
                    COUNT(*) as cantidad_por_tipo
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:11:04 - SQL Data: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:11:04 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 19:11:05 - Resultados tabla: 305
2025-08-27 19:11:05 - Resultados stats: 4
2025-08-27 19:11:05 - Response preparado
2025-08-27 19:11:20 - Solicitud recibida
2025-08-27 19:11:20 - Conexión BD OK
2025-08-27 19:11:20 - Filtros: {"tipoReporte":"emitidos","rfc":"BLM1706026AA","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:11:20 - SQL Stats: SELECT 
                    COUNT(*) as total_cfdis,
                    SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                    AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                    c.tipo_comprobante,
                    COUNT(*) as cantidad_por_tipo
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:11:20 - SQL Data: SELECT 
                c.uuid,
                c.fecha,
                IFNULL(e.rfc, 'N/A') as rfc_emisor,
                IFNULL(e.nombre, 'N/A') as nombre_emisor,
                IFNULL(r.rfc, 'N/A') as rfc_receptor,
                IFNULL(r.nombre, 'N/A') as nombre_receptor,
                c.total,
                c.moneda,
                c.tipo_comprobante
            FROM cfdi c
            LEFT JOIN emisor e ON c.id = e.cfdi_id
            LEFT JOIN receptor r ON c.id = r.cfdi_id
            WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:11:20 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 19:11:23 - Resultados tabla: 418
2025-08-27 19:11:23 - Resultados stats: 4
2025-08-27 19:11:36 - Response preparado
2025-08-27 19:16:38 - Solicitud recibida
2025-08-27 19:16:38 - Conexión BD OK
2025-08-27 19:16:38 - Filtros: {"tipoReporte":"emitidos","fechas":"2020-01-01 a 2025-08-27","rfc":"BFM170822P38"}
2025-08-27 19:16:38 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:16:38 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    c.total,
                    c.moneda,
                    c.tipo_comprobante
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:16:38 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-27"}
2025-08-27 19:16:39 - Resultados tabla: 500
2025-08-27 19:16:39 - Resultados stats: 4
2025-08-27 19:16:39 - Response preparado
2025-08-27 19:17:43 - Solicitud recibida
2025-08-27 19:17:43 - Conexión BD OK
2025-08-27 19:17:43 - Filtros: {"tipoReporte":"recibidos","fechas":"2020-01-01 a 2025-08-27","rfc":"BFM170822P38"}
2025-08-27 19:17:43 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND r.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:17:43 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    c.total,
                    c.moneda,
                    c.tipo_comprobante
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND r.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:17:43 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-27"}
2025-08-27 19:17:44 - Resultados tabla: 500
2025-08-27 19:17:44 - Resultados stats: 3
2025-08-27 19:17:44 - Response preparado
2025-08-27 19:17:57 - Solicitud recibida
2025-08-27 19:17:57 - Conexión BD OK
2025-08-27 19:17:57 - Filtros: {"tipoReporte":"complementos","fechas":"2020-01-01 a 2025-08-27","rfc":"BFM170822P38"}
2025-08-27 19:17:57 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as promedio_ticket,
                        'P' as tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_complementos_pago cp
                    INNER JOIN cfdi c ON cp.cfdi_id = c.id
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:17:57 - SQL Data: SELECT 
                    cp.uuid,
                    cp.fecha_pago as fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    cp.monto as total,
                    cp.moneda_p as moneda,
                    'P' as tipo_comprobante,
                    cp.forma_pago_p as forma_pago,
                    cp.version_pago
                FROM v_complementos_pago cp
                INNER JOIN cfdi c ON cp.cfdi_id = c.id
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:17:57 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-27"}
2025-08-27 19:18:03 - Resultados tabla: 500
2025-08-27 19:18:03 - Resultados stats: 1
2025-08-27 19:18:07 - Response preparado
2025-08-27 19:19:11 - Solicitud recibida
2025-08-27 19:19:11 - Conexión BD OK
2025-08-27 19:19:11 - Filtros: {"tipoReporte":"impuestos","fechas":"2020-01-01 a 2025-08-27","rfc":"BFM170822P38"}
2025-08-27 19:19:11 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:19:11 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    c.total,
                    c.moneda,
                    c.tipo_comprobante
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:19:11 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2020-01-01",":fecha_fin":"2025-08-27"}
2025-08-27 19:19:12 - Resultados tabla: 500
2025-08-27 19:19:12 - Resultados stats: 4
2025-08-27 19:19:44 - Response preparado
2025-08-27 19:20:21 - Solicitud recibida
2025-08-27 19:20:21 - Conexión BD OK
2025-08-27 19:20:21 - Filtros: {"tipoReporte":"complementos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:20:21 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as promedio_ticket,
                        'P' as tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_complementos_pago cp
                    INNER JOIN cfdi c ON cp.cfdi_id = c.id
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:20:21 - SQL Data: SELECT 
                    cp.uuid,
                    cp.fecha_pago as fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    cp.monto as total,
                    cp.moneda_p as moneda,
                    'P' as tipo_comprobante,
                    cp.forma_pago_p as forma_pago,
                    cp.version_pago
                FROM v_complementos_pago cp
                INNER JOIN cfdi c ON cp.cfdi_id = c.id
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:20:21 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 19:20:21 - Resultados tabla: 21
2025-08-27 19:20:21 - Resultados stats: 1
2025-08-27 19:20:21 - Response preparado
2025-08-27 19:20:40 - Solicitud recibida
2025-08-27 19:20:40 - Conexión BD OK
2025-08-27 19:20:40 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:20:40 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:20:40 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    c.total,
                    c.moneda,
                    c.tipo_comprobante
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:20:40 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 19:20:40 - Resultados tabla: 70
2025-08-27 19:20:40 - Resultados stats: 3
2025-08-27 19:20:41 - Response preparado
2025-08-27 19:20:53 - Solicitud recibida
2025-08-27 19:20:53 - Conexión BD OK
2025-08-27 19:20:53 - Filtros: {"tipoReporte":"recibidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:20:53 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND r.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:20:53 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    c.total,
                    c.moneda,
                    c.tipo_comprobante
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND r.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:20:53 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 19:20:54 - Resultados tabla: 43
2025-08-27 19:20:54 - Resultados stats: 2
2025-08-27 19:20:54 - Response preparado
2025-08-27 19:20:59 - Solicitud recibida
2025-08-27 19:20:59 - Conexión BD OK
2025-08-27 19:20:59 - Filtros: {"tipoReporte":"impuestos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:20:59 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:20:59 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    c.total,
                    c.moneda,
                    c.tipo_comprobante
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:20:59 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 19:21:02 - Resultados tabla: 113
2025-08-27 19:21:02 - Resultados stats: 3
2025-08-27 19:21:14 - Response preparado
2025-08-27 19:23:27 - Solicitud recibida
2025-08-27 19:23:27 - Conexión BD OK
2025-08-27 19:23:27 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:23:27 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:23:27 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    c.total,
                    c.moneda,
                    c.tipo_comprobante
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:23:27 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 19:23:28 - Resultados tabla: 70
2025-08-27 19:23:28 - Resultados stats: 3
2025-08-27 19:23:28 - Response preparado
2025-08-27 19:26:45 - Solicitud recibida
2025-08-27 19:26:45 - Conexión BD OK
2025-08-27 19:26:45 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"USD","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:26:45 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin AND c.moneda = :moneda GROUP BY c.tipo_comprobante
2025-08-27 19:26:45 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    c.total,
                    c.moneda,
                    c.tipo_comprobante
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin AND c.moneda = :moneda ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:26:45 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27",":moneda":"USD"}
2025-08-27 19:26:46 - Resultados tabla: 41
2025-08-27 19:26:46 - Resultados stats: 1
2025-08-27 19:26:46 - Response preparado
2025-08-27 19:42:41 - Solicitud recibida
2025-08-27 19:42:41 - Conexión BD OK
2025-08-27 19:42:41 - Filtros: {"tipoReporte":"emitidos","rfcEmisor":"BFM170822P38","fechaInicio":"2024-01-01","fechaFin":"2024-12-31"}
2025-08-27 19:45:28 - Solicitud recibida
2025-08-27 19:45:28 - Conexión BD OK
2025-08-27 19:45:28 - Filtros: {"tipoReporte":"emitidos","rfcEmisor":"BFM170822P38","fechaInicio":"2024-01-01","fechaFin":"2024-12-31"}
2025-08-27 19:45:41 - Solicitud recibida
2025-08-27 19:45:41 - Conexión BD OK
2025-08-27 19:45:41 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 19:45:41 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 19:45:41 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    c.total,
                    c.moneda,
                    c.tipo_comprobante
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:45:41 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 19:45:42 - Resultados tabla: 70
2025-08-27 19:45:42 - Resultados stats: 3
2025-08-27 19:45:43 - Response preparado
2025-08-27 19:46:15 - Solicitud recibida
2025-08-27 19:46:15 - Conexión BD OK
2025-08-27 19:46:15 - Filtros: {"tipoReporte":"emitidos","rfcEmisor":"BFM170822P38","fechaInicio":"2024-01-01","fechaFin":"2024-12-31"}
2025-08-27 19:46:32 - Solicitud recibida
2025-08-27 19:46:32 - Conexión BD OK
2025-08-27 19:46:32 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechaInicio":"2024-01-01","fechaFin":"2024-12-31"}
2025-08-27 19:46:32 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND e.rfc = :rfc GROUP BY c.tipo_comprobante
2025-08-27 19:46:32 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    c.total,
                    c.moneda,
                    c.tipo_comprobante
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE c.uuid IS NOT NULL AND e.rfc = :rfc ORDER BY c.fecha DESC LIMIT 500
2025-08-27 19:46:32 - Params: {":rfc":"BFM170822P38"}
2025-08-27 19:46:33 - Resultados tabla: 500
2025-08-27 19:46:33 - Resultados stats: 4
2025-08-27 19:46:33 - Response preparado
2025-08-27 20:01:01 - Solicitud recibida
2025-08-27 20:01:01 - Conexión BD OK
2025-08-27 20:01:01 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:01:01 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 20:01:01 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    c.fecha_timbrado,
                    c.serie,
                    c.folio,
                    c.version,
                    c.tipo_comprobante,
                    c.subtotal,
                    c.descuento,
                    c.total,
                    c.moneda,
                    c.tipo_cambio,
                    c.metodo_pago,
                    c.forma_pago,
                    c.uso_cfdi,
                    c.lugar_expedicion,
                    c.estatus_sat,
                    c.sello_cfd,
                    c.sello_sat,
                    c.no_certificado_sat,
                    c.rfc_prov_certif,
                    e.rfc as emisor_rfc,
                    e.nombre as emisor_nombre,
                    e.regimen_fiscal as regimen_fiscal_emisor,
                    r.rfc as receptor_rfc,
                    r.nombre as receptor_nombre,
                    r.uso_cfdi as uso_cfdi_receptor,
                    GROUP_CONCAT(DISTINCT con.descripcion SEPARATOR '|') as conceptos_descripcion,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.importe ELSE 0 END) as iva_trasladado,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.base ELSE 0 END) as base_iva_16,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.000000 THEN it.base ELSE 0 END) as base_iva_0,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Exento' THEN it.base ELSE 0 END) as base_iva_exento,
                    SUM(CASE WHEN ir.impuesto = '002' THEN ir.importe ELSE 0 END) as iva_retenido,
                    SUM(CASE WHEN ir.impuesto = '001' THEN ir.importe ELSE 0 END) as isr_retenido,
                    (SELECT cfp.descripcion FROM cat_formas_pago cfp WHERE cfp.clave = c.forma_pago LIMIT 1) as forma_pago_descripcion,
                    (SELECT cuc.descripcion FROM cat_usos_cfdi cuc WHERE cuc.clave = c.uso_cfdi LIMIT 1) as uso_cfdi_descripcion,
                    (SELECT crf.descripcion FROM cat_regimenes_fiscales crf WHERE crf.clave = e.regimen_fiscal LIMIT 1) as regimen_fiscal_descripcion
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                LEFT JOIN conceptos con ON c.id = con.cfdi_id
                LEFT JOIN impuestos_trasladados it ON con.id = it.concepto_id
                LEFT JOIN impuestos_retenidos ir ON con.id = ir.concepto_id
                WHERE c.uuid IS NOT NULL
                GROUP BY c.id AND emisor_rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 20:01:01 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:01:01 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emisor_rfc' in 'where clause'
2025-08-27 20:02:33 - Solicitud recibida
2025-08-27 20:02:33 - Conexión BD OK
2025-08-27 20:02:33 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:02:33 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 20:02:33 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    c.fecha_timbrado,
                    c.serie,
                    c.folio,
                    c.version,
                    c.tipo_comprobante,
                    c.subtotal,
                    c.descuento,
                    c.total,
                    c.moneda,
                    c.tipo_cambio,
                    c.metodo_pago,
                    c.forma_pago,
                    c.uso_cfdi,
                    c.lugar_expedicion,
                    c.estatus_sat,
                    c.sello_cfd,
                    c.sello_sat,
                    c.no_certificado_sat,
                    c.rfc_prov_certif,
                    e.rfc as emisor_rfc,
                    e.nombre as emisor_nombre,
                    e.regimen_fiscal as regimen_fiscal_emisor,
                    r.rfc as receptor_rfc,
                    r.nombre as receptor_nombre,
                    r.uso_cfdi as uso_cfdi_receptor,
                    GROUP_CONCAT(DISTINCT con.descripcion SEPARATOR '|') as conceptos_descripcion,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.importe ELSE 0 END) as iva_trasladado,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.base ELSE 0 END) as base_iva_16,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.000000 THEN it.base ELSE 0 END) as base_iva_0,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Exento' THEN it.base ELSE 0 END) as base_iva_exento,
                    SUM(CASE WHEN ir.impuesto = '002' THEN ir.importe ELSE 0 END) as iva_retenido,
                    SUM(CASE WHEN ir.impuesto = '001' THEN ir.importe ELSE 0 END) as isr_retenido,
                    (SELECT cfp.descripcion FROM cat_formas_pago cfp WHERE cfp.clave = c.forma_pago LIMIT 1) as forma_pago_descripcion,
                    (SELECT cuc.descripcion FROM cat_usos_cfdi cuc WHERE cuc.clave = c.uso_cfdi LIMIT 1) as uso_cfdi_descripcion,
                    (SELECT crf.descripcion FROM cat_regimenes_fiscales crf WHERE crf.clave = e.regimen_fiscal LIMIT 1) as regimen_fiscal_descripcion
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                LEFT JOIN conceptos con ON c.id = con.cfdi_id
                LEFT JOIN impuestos_trasladados it ON con.id = it.concepto_id
                LEFT JOIN impuestos_retenidos ir ON con.id = ir.concepto_id
                WHERE c.uuid IS NOT NULL
                GROUP BY c.id AND emisor_rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 20:02:33 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:02:33 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emisor_rfc' in 'where clause'
2025-08-27 20:03:18 - Solicitud recibida
2025-08-27 20:03:18 - Conexión BD OK
2025-08-27 20:03:18 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:03:18 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 20:03:18 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    c.fecha_timbrado,
                    c.serie,
                    c.folio,
                    c.version,
                    c.tipo_comprobante,
                    c.subtotal,
                    c.descuento,
                    c.total,
                    c.moneda,
                    c.tipo_cambio,
                    c.metodo_pago,
                    c.forma_pago,
                    c.uso_cfdi,
                    c.lugar_expedicion,
                    c.estatus_sat,
                    c.sello_cfd,
                    c.sello_sat,
                    c.no_certificado_sat,
                    c.rfc_prov_certif,
                    e.rfc as emisor_rfc,
                    e.nombre as emisor_nombre,
                    e.regimen_fiscal as regimen_fiscal_emisor,
                    r.rfc as receptor_rfc,
                    r.nombre as receptor_nombre,
                    r.uso_cfdi as uso_cfdi_receptor,
                    GROUP_CONCAT(DISTINCT con.descripcion SEPARATOR '|') as conceptos_descripcion,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.importe ELSE 0 END) as iva_trasladado,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.base ELSE 0 END) as base_iva_16,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.000000 THEN it.base ELSE 0 END) as base_iva_0,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Exento' THEN it.base ELSE 0 END) as base_iva_exento,
                    SUM(CASE WHEN ir.impuesto = '002' THEN ir.importe ELSE 0 END) as iva_retenido,
                    SUM(CASE WHEN ir.impuesto = '001' THEN ir.importe ELSE 0 END) as isr_retenido,
                    (SELECT cfp.descripcion FROM cat_formas_pago cfp WHERE cfp.clave = c.forma_pago LIMIT 1) as forma_pago_descripcion,
                    (SELECT cuc.descripcion FROM cat_usos_cfdi cuc WHERE cuc.clave = c.uso_cfdi LIMIT 1) as uso_cfdi_descripcion,
                    (SELECT crf.descripcion FROM cat_regimenes_fiscales crf WHERE crf.clave = e.regimen_fiscal LIMIT 1) as regimen_fiscal_descripcion
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                LEFT JOIN conceptos con ON c.id = con.cfdi_id
                LEFT JOIN impuestos_trasladados it ON con.id = it.concepto_id
                LEFT JOIN impuestos_retenidos ir ON con.id = ir.concepto_id
                WHERE c.uuid IS NOT NULL
                GROUP BY c.id AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 20:03:18 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:03:19 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c.fecha_timbrado' in 'field list'
2025-08-27 20:09:02 - Solicitud recibida
2025-08-27 20:09:02 - Conexión BD OK
2025-08-27 20:09:02 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:09:02 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 20:09:02 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    c.fecha_timbrado,
                    c.serie,
                    c.folio,
                    c.version,
                    c.tipo_comprobante,
                    c.subtotal,
                    c.descuento,
                    c.total,
                    c.moneda,
                    c.tipo_cambio,
                    c.metodo_pago,
                    c.forma_pago,
                    c.uso_cfdi,
                    c.lugar_expedicion,
                    c.estatus_sat,
                    c.sello_cfd,
                    c.sello_sat,
                    c.no_certificado_sat,
                    c.rfc_prov_certif,
                    e.rfc as emisor_rfc,
                    e.nombre as emisor_nombre,
                    e.regimen_fiscal as regimen_fiscal_emisor,
                    r.rfc as receptor_rfc,
                    r.nombre as receptor_nombre,
                    r.uso_cfdi as uso_cfdi_receptor,
                    GROUP_CONCAT(DISTINCT con.descripcion SEPARATOR '|') as conceptos_descripcion,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.importe ELSE 0 END) as iva_trasladado,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.base ELSE 0 END) as base_iva_16,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.000000 THEN it.base ELSE 0 END) as base_iva_0,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Exento' THEN it.base ELSE 0 END) as base_iva_exento,
                    SUM(CASE WHEN ir.impuesto = '002' THEN ir.importe ELSE 0 END) as iva_retenido,
                    SUM(CASE WHEN ir.impuesto = '001' THEN ir.importe ELSE 0 END) as isr_retenido,
                    (SELECT cfp.descripcion FROM cat_formas_pago cfp WHERE cfp.clave = c.forma_pago LIMIT 1) as forma_pago_descripcion,
                    (SELECT cuc.descripcion FROM cat_usos_cfdi cuc WHERE cuc.clave = c.uso_cfdi LIMIT 1) as uso_cfdi_descripcion,
                    (SELECT crf.descripcion FROM cat_regimenes_fiscales crf WHERE crf.clave = e.regimen_fiscal LIMIT 1) as regimen_fiscal_descripcion
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                LEFT JOIN conceptos con ON c.id = con.cfdi_id
                LEFT JOIN impuestos_trasladados it ON con.id = it.concepto_id
                LEFT JOIN impuestos_retenidos ir ON con.id = ir.concepto_id
                WHERE c.uuid IS NOT NULL
                GROUP BY c.id AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 20:09:02 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:09:03 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c.fecha_timbrado' in 'field list'
2025-08-27 20:10:09 - Solicitud recibida
2025-08-27 20:10:09 - Conexión BD OK
2025-08-27 20:10:09 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:10:09 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    LEFT JOIN cfdi_timbre_fiscal_digital tf ON c.id = tf.cfdi_id
                    WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 20:10:09 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    tf.fecha_timbrado,
                    c.serie,
                    c.folio,
                    c.version,
                    c.tipo_comprobante,
                    c.subtotal,
                    c.descuento,
                    c.total,
                    c.moneda,
                    c.tipo_cambio,
                    c.metodo_pago,
                    c.forma_pago,
                    c.uso_cfdi,
                    c.lugar_expedicion,
                    c.estatus_sat,
                    c.sello_cfd,
                    c.sello_sat,
                    c.no_certificado_sat,
                    c.rfc_prov_certif,
                    e.rfc as emisor_rfc,
                    e.nombre as emisor_nombre,
                    e.regimen_fiscal as regimen_fiscal_emisor,
                    r.rfc as receptor_rfc,
                    r.nombre as receptor_nombre,
                    r.uso_cfdi as uso_cfdi_receptor,
                    GROUP_CONCAT(DISTINCT con.descripcion SEPARATOR '|') as conceptos_descripcion,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.importe ELSE 0 END) as iva_trasladado,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.base ELSE 0 END) as base_iva_16,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.000000 THEN it.base ELSE 0 END) as base_iva_0,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Exento' THEN it.base ELSE 0 END) as base_iva_exento,
                    SUM(CASE WHEN ir.impuesto = '002' THEN ir.importe ELSE 0 END) as iva_retenido,
                    SUM(CASE WHEN ir.impuesto = '001' THEN ir.importe ELSE 0 END) as isr_retenido,
                    (SELECT cfp.descripcion FROM cat_formas_pago cfp WHERE cfp.clave = c.forma_pago LIMIT 1) as forma_pago_descripcion,
                    (SELECT cuc.descripcion FROM cat_usos_cfdi cuc WHERE cuc.clave = c.uso_cfdi LIMIT 1) as uso_cfdi_descripcion,
                    (SELECT crf.descripcion FROM cat_regimenes_fiscales crf WHERE crf.clave = e.regimen_fiscal LIMIT 1) as regimen_fiscal_descripcion
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                LEFT JOIN cfdi_timbre_fiscal_digital tf ON c.id = tf.cfdi_id
                LEFT JOIN conceptos con ON c.id = con.cfdi_id
                LEFT JOIN impuestos_trasladados it ON con.id = it.concepto_id
                LEFT JOIN impuestos_retenidos ir ON con.id = ir.concepto_id
                WHERE c.uuid IS NOT NULL
                GROUP BY c.id AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 20:10:09 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:10:10 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c.uso_cfdi' in 'field list'
2025-08-27 20:11:14 - Solicitud recibida
2025-08-27 20:11:14 - Conexión BD OK
2025-08-27 20:11:14 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:11:14 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                        c.tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    LEFT JOIN cfdi_timbre_fiscal_digital tf ON c.id = tf.cfdi_id
                    WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 20:11:14 - SQL Data: SELECT 
                    c.uuid,
                    c.fecha,
                    tf.fecha_timbrado,
                    c.serie,
                    c.folio,
                    c.version,
                    c.tipo_comprobante,
                    c.subtotal,
                    c.descuento,
                    c.total,
                    c.moneda,
                    c.tipo_cambio,
                    c.metodo_pago,
                    c.forma_pago,
                    r.uso_cfdi,
                    c.lugar_expedicion,
                    'Vigente' as estatus_sat,
                    c.sello as sello_cfd,
                    tf.sello_sat,
                    tf.no_certificado_sat,
                    tf.rfc_prov_certif,
                    e.rfc as emisor_rfc,
                    e.nombre as emisor_nombre,
                    e.regimen_fiscal as regimen_fiscal_emisor,
                    r.rfc as receptor_rfc,
                    r.nombre as receptor_nombre,
                    GROUP_CONCAT(DISTINCT con.descripcion SEPARATOR '|') as conceptos_descripcion,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.importe ELSE 0 END) as iva_trasladado,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.160000 THEN it.base ELSE 0 END) as base_iva_16,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Tasa' AND it.tasa_cuota = 0.000000 THEN it.base ELSE 0 END) as base_iva_0,
                    SUM(CASE WHEN it.impuesto = '002' AND it.tipo_factor = 'Exento' THEN it.base ELSE 0 END) as base_iva_exento,
                    SUM(CASE WHEN ir.impuesto = '002' THEN ir.importe ELSE 0 END) as iva_retenido,
                    SUM(CASE WHEN ir.impuesto = '001' THEN ir.importe ELSE 0 END) as isr_retenido
                FROM cfdi c
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                LEFT JOIN cfdi_timbre_fiscal_digital tf ON c.id = tf.cfdi_id
                LEFT JOIN conceptos con ON c.id = con.cfdi_id
                LEFT JOIN impuestos_trasladados it ON con.id = it.concepto_id
                LEFT JOIN impuestos_retenidos ir ON con.id = ir.concepto_id
                WHERE c.uuid IS NOT NULL
                GROUP BY c.id AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 20:11:14 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:13:07 - Resultados tabla: 2
2025-08-27 20:13:07 - Resultados stats: 4
2025-08-27 20:13:08 - Response preparado
2025-08-27 20:14:00 - Solicitud recibida
2025-08-27 20:14:00 - Conexión BD OK
2025-08-27 20:14:00 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:14:00 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 20:14:00 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 20:14:00 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:14:00 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'e.rfc' in 'where clause'
2025-08-27 20:14:08 - Solicitud recibida
2025-08-27 20:14:08 - Conexión BD OK
2025-08-27 20:14:08 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:14:08 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 20:14:08 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 20:14:08 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:14:08 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'e.rfc' in 'where clause'
2025-08-27 20:15:10 - Solicitud recibida
2025-08-27 20:15:10 - Conexión BD OK
2025-08-27 20:15:10 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:15:10 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 20:15:10 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 20:15:10 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:15:12 - Resultados tabla: 500
2025-08-27 20:15:12 - Resultados stats: 4
2025-08-27 20:15:26 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emisor_rfc' in 'where clause'
2025-08-27 20:17:12 - Solicitud recibida
2025-08-27 20:17:12 - Conexión BD OK
2025-08-27 20:17:12 - Filtros: {"tipoReporte":"complementos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:17:12 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as promedio_ticket,
                        'P' as tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_complementos_pago cp
                    INNER JOIN cfdi c ON cp.cfdi_id = c.id
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 20:17:12 - SQL Data: SELECT 
                    cp.uuid,
                    cp.fecha_pago as fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    cp.monto as total,
                    cp.moneda_p as moneda,
                    'P' as tipo_comprobante,
                    cp.forma_pago_p as forma_pago,
                    cp.version_pago
                FROM v_complementos_pago cp
                INNER JOIN cfdi c ON cp.cfdi_id = c.id
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY cp.fecha_pago DESC LIMIT 500
2025-08-27 20:17:12 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:17:14 - Resultados tabla: 500
2025-08-27 20:17:14 - Resultados stats: 1
2025-08-27 20:17:15 - Response preparado
2025-08-27 20:17:23 - Solicitud recibida
2025-08-27 20:17:23 - Conexión BD OK
2025-08-27 20:17:23 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:17:23 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 20:17:23 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 20:17:23 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:17:25 - Resultados tabla: 500
2025-08-27 20:17:25 - Resultados stats: 4
2025-08-27 20:17:39 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emisor_rfc' in 'where clause'
2025-08-27 20:17:47 - Solicitud recibida
2025-08-27 20:17:48 - Conexión BD OK
2025-08-27 20:17:48 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:17:48 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 20:17:48 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 20:17:48 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:17:49 - Resultados tabla: 500
2025-08-27 20:17:49 - Resultados stats: 4
2025-08-27 20:18:02 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emisor_rfc' in 'where clause'
2025-08-27 20:18:39 - Solicitud recibida
2025-08-27 20:18:39 - Conexión BD OK
2025-08-27 20:18:39 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2024-01-01 a 2024-12-31"}
2025-08-27 20:18:39 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 20:18:39 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 20:18:39 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:18:40 - Resultados tabla: 500
2025-08-27 20:18:40 - Resultados stats: 4
2025-08-27 20:18:40 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emisor_rfc' in 'where clause'
2025-08-27 20:20:26 - Solicitud recibida
2025-08-27 20:20:26 - Conexión BD OK
2025-08-27 20:20:26 - Filtros: []
2025-08-27 20:20:35 - Solicitud recibida
2025-08-27 20:20:35 - Conexión BD OK
2025-08-27 20:20:35 - Filtros: []
2025-08-27 20:21:17 - Solicitud recibida
2025-08-27 20:21:17 - Conexión BD OK
2025-08-27 20:21:17 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"RDI841003QJ4"}
2025-08-27 20:21:17 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc GROUP BY tipo_comprobante
2025-08-27 20:21:17 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc ORDER BY fecha DESC LIMIT 500
2025-08-27 20:21:17 - Params: {":rfc":"RDI841003QJ4"}
2025-08-27 20:21:18 - Resultados tabla: 458
2025-08-27 20:21:18 - Resultados stats: 3
2025-08-27 20:21:19 - Response preparado
2025-08-27 20:21:25 - Solicitud recibida
2025-08-27 20:21:25 - Conexión BD OK
2025-08-27 20:21:25 - Filtros: {"tipo":"recibidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","receptor_rfc":"BFM170822P38"}
2025-08-27 20:21:25 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc GROUP BY tipo_comprobante
2025-08-27 20:21:25 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND receptor_rfc = :rfc ORDER BY fecha DESC LIMIT 500
2025-08-27 20:21:25 - Params: {":rfc":"BFM170822P38"}
2025-08-27 20:21:26 - Resultados tabla: 500
2025-08-27 20:21:26 - Resultados stats: 3
2025-08-27 20:21:26 - Response preparado
2025-08-27 20:21:36 - Solicitud recibida
2025-08-27 20:21:36 - Conexión BD OK
2025-08-27 20:21:36 - Filtros: {"tipo":"complementos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31"}
2025-08-27 20:21:36 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as promedio_ticket,
                        'P' as tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_complementos_pago cp
                    INNER JOIN cfdi c ON cp.cfdi_id = c.id
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE cp.uuid IS NOT NULL GROUP BY c.tipo_comprobante
2025-08-27 20:21:36 - SQL Data: SELECT 
                    cp.uuid,
                    cp.fecha_pago as fecha,
                    IFNULL(e.rfc, 'N/A') as rfc_emisor,
                    IFNULL(e.nombre, 'N/A') as nombre_emisor,
                    IFNULL(r.rfc, 'N/A') as rfc_receptor,
                    IFNULL(r.nombre, 'N/A') as nombre_receptor,
                    cp.monto as total,
                    cp.moneda_p as moneda,
                    'P' as tipo_comprobante,
                    cp.forma_pago_p as forma_pago,
                    cp.version_pago
                FROM v_complementos_pago cp
                INNER JOIN cfdi c ON cp.cfdi_id = c.id
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE cp.uuid IS NOT NULL ORDER BY cp.fecha_pago DESC LIMIT 500
2025-08-27 20:21:36 - Params: []
2025-08-27 20:21:41 - Resultados tabla: 500
2025-08-27 20:21:41 - Resultados stats: 1
2025-08-27 20:21:42 - Response preparado
2025-08-27 20:22:12 - Solicitud recibida
2025-08-27 20:22:12 - Conexión BD OK
2025-08-27 20:22:12 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 20:22:15 - Solicitud recibida
2025-08-27 20:22:15 - Conexión BD OK
2025-08-27 20:22:15 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 20:25:14 - Solicitud recibida
2025-08-27 20:25:14 - Conexión BD OK
2025-08-27 20:25:14 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 20:25:14 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 20:25:14 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 20:25:14 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 20:25:15 - Resultados tabla: 70
2025-08-27 20:25:15 - Resultados stats: 3
2025-08-27 20:25:15 - Response preparado
2025-08-27 20:25:26 - Solicitud recibida
2025-08-27 20:25:26 - Conexión BD OK
2025-08-27 20:25:26 - Filtros: {"tipoReporte":"emitidos","rfc":"BLM1706026AA","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 20:25:26 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 20:25:26 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 20:25:26 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 20:25:27 - Resultados tabla: 7
2025-08-27 20:25:27 - Resultados stats: 3
2025-08-27 20:25:27 - Response preparado
2025-08-27 20:25:47 - Solicitud recibida
2025-08-27 20:25:47 - Conexión BD OK
2025-08-27 20:25:47 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 20:25:47 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 20:25:47 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 20:25:47 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-27 20:25:48 - Resultados tabla: 100
2025-08-27 20:25:48 - Resultados stats: 3
2025-08-27 20:25:49 - Response preparado
2025-08-27 20:35:38 - Solicitud recibida
2025-08-27 20:35:38 - Conexión BD OK
2025-08-27 20:35:38 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 20:35:38 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 20:35:38 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    total,
                    moneda,
                    emisor_rfc,
                    emisor_nombre,
                    receptor_rfc,
                    receptor_nombre
                FROM v_cfdi_completo
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 20:35:38 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 20:35:38 - Resultados tabla: 70
2025-08-27 20:35:38 - Resultados stats: 3
2025-08-27 20:35:38 - Response preparado
2025-08-27 20:48:37 - Solicitud recibida
2025-08-27 20:48:37 - Conexión BD OK
2025-08-27 20:48:37 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 20:48:37 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 20:48:37 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    subtotal,
                    descuento,
                    total,
                    moneda,
                    tipo_cambio,
                    forma_pago,
                    metodo_pago,
                    uso_cfdi,
                    emisor_rfc,
                    emisor_nombre,
                    emisor_regimen_fiscal,
                    receptor_rfc,
                    receptor_nombre,
                    cfdi_relacionado_uuid,
                    uuid_sustitucion,
                    iva_trasladado,
                    iva_retenido,
                    isr_retenido,
                    total_impuestos_trasladados,
                    total_impuestos_retenidos,
                    base_iva_16,
                    base_iva_0,
                    base_iva_exento,
                    conceptos_descripcion,
                    estatus_sat
                FROM v_cfdi_excel_completo
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 20:48:37 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:48:37 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emisor_regimen_fiscal' in 'field list'
2025-08-27 20:48:50 - Solicitud recibida
2025-08-27 20:48:50 - Conexión BD OK
2025-08-27 20:48:50 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 20:48:50 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 20:48:50 - SQL Data: SELECT 
                    uuid,
                    fecha,
                    fecha_timbrado,
                    serie,
                    folio,
                    version,
                    tipo_comprobante,
                    subtotal,
                    descuento,
                    total,
                    moneda,
                    tipo_cambio,
                    forma_pago,
                    metodo_pago,
                    uso_cfdi,
                    emisor_rfc,
                    emisor_nombre,
                    emisor_regimen as emisor_regimen_fiscal,
                    receptor_rfc,
                    receptor_nombre,
                    cfdi_relacionado_uuid,
                    uuid_sustitucion,
                    iva_trasladado,
                    iva_retenido,
                    isr_retenido,
                    total_impuestos_trasladados,
                    total_impuestos_retenidos,
                    base_iva_16,
                    base_iva_0,
                    base_iva_exento,
                    conceptos_descripcion,
                    estatus_sat
                FROM v_cfdi_excel_completo
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 20:48:50 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 20:48:50 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'cfdi_relacionado_uuid' in 'field list'
2025-08-27 21:02:56 - Solicitud recibida
2025-08-27 21:02:56 - Conexión BD OK
2025-08-27 21:02:56 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:02:56 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 21:02:56 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 21:02:56 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:02:56 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'fecha' in 'where clause'
2025-08-27 21:03:24 - Solicitud recibida
2025-08-27 21:03:24 - Conexión BD OK
2025-08-27 21:03:24 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:03:24 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 21:03:24 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 21:03:24 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:03:24 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emision' in 'where clause'
2025-08-27 21:04:09 - Solicitud recibida
2025-08-27 21:04:09 - Conexión BD OK
2025-08-27 21:04:09 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:04:09 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 21:04:09 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha DESC LIMIT 500
2025-08-27 21:04:09 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:04:09 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emision' in 'where clause'
2025-08-27 21:05:21 - Solicitud recibida
2025-08-27 21:05:21 - Conexión BD OK
2025-08-27 21:05:21 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:05:21 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 21:05:21 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:05:21 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:05:21 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emision' in 'where clause'
2025-08-27 21:05:53 - Solicitud recibida
2025-08-27 21:05:53 - Conexión BD OK
2025-08-27 21:05:53 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:05:53 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo_comprobante,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_cfdi_completo
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 21:05:53 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:05:53 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:05:53 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emision' in 'where clause'
2025-08-27 21:06:22 - Solicitud recibida
2025-08-27 21:06:22 - Conexión BD OK
2025-08-27 21:06:22 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:06:22 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo_comprobante
2025-08-27 21:06:22 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:06:22 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:06:22 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'tipo_comprobante' in 'group statement'
2025-08-27 21:06:40 - Solicitud recibida
2025-08-27 21:06:40 - Conexión BD OK
2025-08-27 21:06:40 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:06:40 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:06:40 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:06:40 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:06:44 - Resultados tabla: 500
2025-08-27 21:06:44 - Resultados stats: 4
2025-08-27 21:06:57 - Response preparado
2025-08-27 21:07:24 - Solicitud recibida
2025-08-27 21:07:24 - Conexión BD OK
2025-08-27 21:07:24 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:07:24 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:07:24 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:07:24 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:07:28 - Resultados tabla: 500
2025-08-27 21:07:28 - Resultados stats: 4
2025-08-27 21:07:41 - Response preparado
2025-08-27 21:08:12 - Solicitud recibida
2025-08-27 21:08:12 - Conexión BD OK
2025-08-27 21:08:12 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 21:08:12 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:08:12 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:08:12 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 21:08:16 - Resultados tabla: 70
2025-08-27 21:08:16 - Resultados stats: 3
2025-08-27 21:08:17 - Response preparado
2025-08-27 21:09:55 - Solicitud recibida
2025-08-27 21:09:55 - Conexión BD OK
2025-08-27 21:09:55 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:09:55 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:09:55 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:09:55 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:09:59 - Resultados tabla: 500
2025-08-27 21:09:59 - Resultados stats: 4
2025-08-27 21:10:11 - Response preparado
2025-08-27 21:12:38 - Solicitud recibida
2025-08-27 21:12:38 - Conexión BD OK
2025-08-27 21:12:38 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:12:38 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:12:38 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:12:38 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:12:42 - Resultados tabla: 500
2025-08-27 21:12:42 - Resultados stats: 4
2025-08-27 21:12:52 - Response preparado
2025-08-27 21:13:00 - Solicitud recibida
2025-08-27 21:13:00 - Conexión BD OK
2025-08-27 21:13:00 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:13:00 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:13:00 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:13:00 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:13:04 - Resultados tabla: 500
2025-08-27 21:13:04 - Resultados stats: 4
2025-08-27 21:13:14 - Response preparado
2025-08-27 21:13:20 - Solicitud recibida
2025-08-27 21:13:21 - Conexión BD OK
2025-08-27 21:13:21 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:13:21 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:13:21 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:13:21 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:13:24 - Resultados tabla: 500
2025-08-27 21:13:24 - Resultados stats: 4
2025-08-27 21:13:34 - Response preparado
2025-08-27 21:14:15 - Solicitud recibida
2025-08-27 21:14:15 - Conexión BD OK
2025-08-27 21:14:15 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:14:15 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:14:15 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:14:15 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:14:19 - Resultados tabla: 500
2025-08-27 21:14:19 - Resultados stats: 4
2025-08-27 21:14:23 - Response preparado
2025-08-27 21:14:29 - Solicitud recibida
2025-08-27 21:14:29 - Conexión BD OK
2025-08-27 21:14:29 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:14:29 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:14:29 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:14:29 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:14:33 - Resultados tabla: 500
2025-08-27 21:14:33 - Resultados stats: 4
2025-08-27 21:14:37 - Response preparado
2025-08-27 21:14:49 - Solicitud recibida
2025-08-27 21:14:49 - Conexión BD OK
2025-08-27 21:14:49 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:14:49 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:14:49 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:14:49 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:14:53 - Resultados tabla: 500
2025-08-27 21:14:53 - Resultados stats: 4
2025-08-27 21:14:57 - Response preparado
2025-08-27 21:15:03 - Solicitud recibida
2025-08-27 21:15:03 - Conexión BD OK
2025-08-27 21:15:03 - Filtros: {"tipo":"complementos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:15:03 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as promedio_ticket,
                        'P' as tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_complementos_pago cp
                    INNER JOIN cfdi c ON cp.cfdi_id = c.id
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY 'P'
2025-08-27 21:15:03 - SQL Data: SELECT 
                    cp.uuid,
                    cp.fecha_pago as emision,
                    IFNULL(e.rfc, 'N/A') as emisor_rfc,
                    IFNULL(e.nombre, 'N/A') as emisor_nombre,
                    IFNULL(r.rfc, 'N/A') as receptor_rfc,
                    IFNULL(r.nombre, 'N/A') as receptor_nombre,
                    cp.monto as total,
                    cp.moneda_p as moneda,
                    'P' as tipo,
                    cp.forma_pago_p as forma_pago,
                    cp.version_pago
                FROM v_complementos_pago cp
                INNER JOIN cfdi c ON cp.cfdi_id = c.id
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY cp.fecha_pago DESC LIMIT 500
2025-08-27 21:15:03 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:15:04 - Resultados tabla: 500
2025-08-27 21:15:04 - Resultados stats: 1
2025-08-27 21:15:05 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emisor_rfc' in 'where clause'
2025-08-27 21:15:10 - Solicitud recibida
2025-08-27 21:15:10 - Conexión BD OK
2025-08-27 21:15:10 - Filtros: {"tipo":"complementos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:15:10 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as promedio_ticket,
                        'P' as tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_complementos_pago cp
                    INNER JOIN cfdi c ON cp.cfdi_id = c.id
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY 'P'
2025-08-27 21:15:10 - SQL Data: SELECT 
                    cp.uuid,
                    cp.fecha_pago as emision,
                    IFNULL(e.rfc, 'N/A') as emisor_rfc,
                    IFNULL(e.nombre, 'N/A') as emisor_nombre,
                    IFNULL(r.rfc, 'N/A') as receptor_rfc,
                    IFNULL(r.nombre, 'N/A') as receptor_nombre,
                    cp.monto as total,
                    cp.moneda_p as moneda,
                    'P' as tipo,
                    cp.forma_pago_p as forma_pago,
                    cp.version_pago
                FROM v_complementos_pago cp
                INNER JOIN cfdi c ON cp.cfdi_id = c.id
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY cp.fecha_pago DESC LIMIT 500
2025-08-27 21:15:10 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:15:11 - Resultados tabla: 500
2025-08-27 21:15:11 - Resultados stats: 1
2025-08-27 21:15:11 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emisor_rfc' in 'where clause'
2025-08-27 21:15:16 - Solicitud recibida
2025-08-27 21:15:16 - Conexión BD OK
2025-08-27 21:15:16 - Filtros: {"tipo":"complementos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:15:16 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as promedio_ticket,
                        'P' as tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_complementos_pago cp
                    INNER JOIN cfdi c ON cp.cfdi_id = c.id
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY 'P'
2025-08-27 21:15:16 - SQL Data: SELECT 
                    cp.uuid,
                    cp.fecha_pago as emision,
                    IFNULL(e.rfc, 'N/A') as emisor_rfc,
                    IFNULL(e.nombre, 'N/A') as emisor_nombre,
                    IFNULL(r.rfc, 'N/A') as receptor_rfc,
                    IFNULL(r.nombre, 'N/A') as receptor_nombre,
                    cp.monto as total,
                    cp.moneda_p as moneda,
                    'P' as tipo,
                    cp.forma_pago_p as forma_pago,
                    cp.version_pago
                FROM v_complementos_pago cp
                INNER JOIN cfdi c ON cp.cfdi_id = c.id
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY cp.fecha_pago DESC LIMIT 500
2025-08-27 21:15:16 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:15:17 - Resultados tabla: 500
2025-08-27 21:15:17 - Resultados stats: 1
2025-08-27 21:15:17 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'emisor_rfc' in 'where clause'
2025-08-27 21:15:31 - Solicitud recibida
2025-08-27 21:15:31 - Conexión BD OK
2025-08-27 21:15:31 - Filtros: {"tipo":"complementos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:15:31 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as promedio_ticket,
                        'P' as tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_complementos_pago cp
                    INNER JOIN cfdi c ON cp.cfdi_id = c.id
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY 'P'
2025-08-27 21:15:31 - SQL Data: SELECT 
                    cp.uuid,
                    cp.fecha_pago as emision,
                    IFNULL(e.rfc, 'N/A') as emisor_rfc,
                    IFNULL(e.nombre, 'N/A') as emisor_nombre,
                    IFNULL(r.rfc, 'N/A') as receptor_rfc,
                    IFNULL(r.nombre, 'N/A') as receptor_nombre,
                    cp.monto as total,
                    cp.moneda_p as moneda,
                    'P' as tipo,
                    cp.forma_pago_p as forma_pago,
                    cp.version_pago
                FROM v_complementos_pago cp
                INNER JOIN cfdi c ON cp.cfdi_id = c.id
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY cp.fecha_pago DESC LIMIT 500
2025-08-27 21:15:31 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:15:32 - Resultados tabla: 500
2025-08-27 21:15:32 - Resultados stats: 1
2025-08-27 21:15:33 - Response preparado
2025-08-27 21:15:40 - Solicitud recibida
2025-08-27 21:15:40 - Conexión BD OK
2025-08-27 21:15:40 - Filtros: {"tipo":"recibidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","receptor_rfc":"BFM170822P38"}
2025-08-27 21:15:40 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:15:40 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:15:40 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:15:40 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'receptor_rfc' in 'where clause'
2025-08-27 21:15:47 - Solicitud recibida
2025-08-27 21:15:47 - Conexión BD OK
2025-08-27 21:15:47 - Filtros: {"tipo":"recibidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","receptor_rfc":"BFM170822P38"}
2025-08-27 21:15:47 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:15:47 - SQL Data: SELECT 
                    sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                    serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                    emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                    base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                    iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                    moneda, forma_pago_descripcion, metodo_pago
                FROM v_reporte_excel
                WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:15:47 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:15:47 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'receptor_rfc' in 'where clause'
2025-08-27 21:17:56 - Solicitud recibida
2025-08-27 21:17:56 - Conexión BD OK
2025-08-27 21:17:56 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:17:56 - SQL Stats: SELECT 
                            COUNT(*) as total_cfdis,
                            SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                            AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                            tipo,
                            COUNT(*) as cantidad_por_tipo
                        FROM v_reporte_excel
                        WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:17:56 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                        base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                        iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                        moneda, forma_pago_descripcion, metodo_pago,
                        '' as receptor_rfc, '' as receptor_nombre
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:17:56 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:18:00 - Resultados tabla: 500
2025-08-27 21:18:00 - Resultados stats: 4
2025-08-27 21:18:03 - Response preparado
2025-08-27 21:18:08 - Solicitud recibida
2025-08-27 21:18:08 - Conexión BD OK
2025-08-27 21:18:08 - Filtros: {"tipo":"recibidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","receptor_rfc":"BFM170822P38"}
2025-08-27 21:18:08 - SQL Stats: SELECT 
                            COUNT(*) as total_cfdis,
                            SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                            AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                            c.tipo_comprobante as tipo,
                            COUNT(*) as cantidad_por_tipo
                        FROM cfdi c
                        LEFT JOIN emisor e ON c.id = e.cfdi_id
                        LEFT JOIN receptor r ON c.id = r.cfdi_id
                        WHERE c.uuid IS NOT NULL AND r.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 21:18:08 - SQL Data: SELECT 
                        c.uuid, c.fecha as emision, e.rfc as emisor_rfc, e.nombre as emisor_nombre,
                        r.rfc as receptor_rfc, r.nombre as receptor_nombre, c.total, c.moneda, c.tipo_comprobante as tipo
                    FROM cfdi c
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE c.uuid IS NOT NULL AND r.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 21:18:08 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:18:09 - Resultados tabla: 500
2025-08-27 21:18:09 - Resultados stats: 2
2025-08-27 21:18:09 - Response preparado
2025-08-27 21:18:14 - Solicitud recibida
2025-08-27 21:18:14 - Conexión BD OK
2025-08-27 21:18:14 - Filtros: {"tipo":"complementos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:18:14 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as promedio_ticket,
                        'P' as tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_complementos_pago cp
                    INNER JOIN cfdi c ON cp.cfdi_id = c.id
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY 'P'
2025-08-27 21:18:14 - SQL Data: SELECT 
                    cp.uuid,
                    cp.fecha_pago as emision,
                    IFNULL(e.rfc, 'N/A') as emisor_rfc,
                    IFNULL(e.nombre, 'N/A') as emisor_nombre,
                    IFNULL(r.rfc, 'N/A') as receptor_rfc,
                    IFNULL(r.nombre, 'N/A') as receptor_nombre,
                    cp.monto as total,
                    cp.moneda_p as moneda,
                    'P' as tipo,
                    cp.forma_pago_p as forma_pago,
                    cp.version_pago
                FROM v_complementos_pago cp
                INNER JOIN cfdi c ON cp.cfdi_id = c.id
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) AND DATE(cp.fecha_pago) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY cp.fecha_pago DESC LIMIT 500
2025-08-27 21:18:14 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:18:15 - Resultados tabla: 500
2025-08-27 21:18:15 - Resultados stats: 1
2025-08-27 21:18:16 - Response preparado
2025-08-27 21:18:45 - Solicitud recibida
2025-08-27 21:18:45 - Conexión BD OK
2025-08-27 21:18:45 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 21:18:45 - SQL Stats: SELECT 
                            COUNT(*) as total_cfdis,
                            SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                            AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                            tipo,
                            COUNT(*) as cantidad_por_tipo
                        FROM v_reporte_excel
                        WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:18:45 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal, 
                        base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                        iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                        moneda, forma_pago_descripcion, metodo_pago,
                        '' as receptor_rfc, '' as receptor_nombre
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:18:45 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 21:18:49 - Resultados tabla: 70
2025-08-27 21:18:49 - Resultados stats: 3
2025-08-27 21:18:53 - Response preparado
2025-08-27 21:22:10 - Solicitud recibida
2025-08-27 21:22:10 - Conexión BD OK
2025-08-27 21:22:10 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:22:10 - SQL Stats: SELECT 
                                COUNT(*) as total_cfdis,
                                SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                                AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                                c.tipo_comprobante as tipo,
                                COUNT(*) as cantidad_por_tipo
                            FROM cfdi c
                            LEFT JOIN emisor e ON c.id = e.cfdi_id
                            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 21:22:10 - SQL Data: SELECT 
                            c.uuid, c.fecha, e.rfc as emisor_rfc, e.nombre as emisor_nombre,
                            '' as receptor_rfc, '' as receptor_nombre, c.total, c.moneda, c.tipo_comprobante as tipo
                        FROM cfdi c
                        LEFT JOIN emisor e ON c.id = e.cfdi_id
                        WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 21:22:10 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:22:11 - Resultados tabla: 500
2025-08-27 21:22:11 - Resultados stats: 4
2025-08-27 21:22:13 - Response preparado
2025-08-27 21:22:22 - Solicitud recibida
2025-08-27 21:22:22 - Conexión BD OK
2025-08-27 21:22:22 - Filtros: {"tipo":"recibidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","receptor_rfc":"BFM170822P38"}
2025-08-27 21:22:22 - SQL Stats: SELECT 
                                COUNT(*) as total_cfdis,
                                SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                                AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                                c.tipo_comprobante as tipo,
                                COUNT(*) as cantidad_por_tipo
                            FROM cfdi c
                            LEFT JOIN emisor e ON c.id = e.cfdi_id
                            LEFT JOIN receptor r ON c.id = r.cfdi_id
                            WHERE c.uuid IS NOT NULL AND r.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 21:22:22 - SQL Data: SELECT 
                            c.uuid, c.fecha, e.rfc as emisor_rfc, e.nombre as emisor_nombre,
                            r.rfc as receptor_rfc, r.nombre as receptor_nombre, c.total, c.moneda, c.tipo_comprobante as tipo
                        FROM cfdi c
                        LEFT JOIN emisor e ON c.id = e.cfdi_id
                        LEFT JOIN receptor r ON c.id = r.cfdi_id
                        WHERE c.uuid IS NOT NULL AND r.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 21:22:22 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:22:22 - Resultados tabla: 500
2025-08-27 21:22:22 - Resultados stats: 2
2025-08-27 21:22:22 - Response preparado
2025-08-27 21:22:39 - Solicitud recibida
2025-08-27 21:22:39 - Conexión BD OK
2025-08-27 21:22:39 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 21:22:39 - SQL Stats: SELECT 
                                COUNT(*) as total_cfdis,
                                SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                                AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                                c.tipo_comprobante as tipo,
                                COUNT(*) as cantidad_por_tipo
                            FROM cfdi c
                            LEFT JOIN emisor e ON c.id = e.cfdi_id
                            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 21:22:39 - SQL Data: SELECT 
                            c.uuid, c.fecha, e.rfc as emisor_rfc, e.nombre as emisor_nombre,
                            '' as receptor_rfc, '' as receptor_nombre, c.total, c.moneda, c.tipo_comprobante as tipo
                        FROM cfdi c
                        LEFT JOIN emisor e ON c.id = e.cfdi_id
                        WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 21:22:39 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 21:22:40 - Resultados tabla: 70
2025-08-27 21:22:40 - Resultados stats: 3
2025-08-27 21:22:42 - Response preparado
2025-08-27 21:27:32 - Solicitud recibida
2025-08-27 21:27:32 - Conexión BD OK
2025-08-27 21:27:32 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:27:32 - Es para Excel: NO
2025-08-27 21:27:32 - SQL Stats: SELECT 
                                COUNT(*) as total_cfdis,
                                SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                                AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                                c.tipo_comprobante as tipo,
                                COUNT(*) as cantidad_por_tipo
                            FROM cfdi c
                            LEFT JOIN emisor e ON c.id = e.cfdi_id
                            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 21:27:32 - SQL Data: SELECT 
                            c.uuid, c.fecha, e.rfc as emisor_rfc, e.nombre as emisor_nombre,
                            '' as receptor_rfc, '' as receptor_nombre, c.total, c.moneda, c.tipo_comprobante as tipo
                        FROM cfdi c
                        LEFT JOIN emisor e ON c.id = e.cfdi_id
                        WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 21:27:32 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:27:33 - Resultados tabla: 500
2025-08-27 21:27:33 - Resultados stats: 4
2025-08-27 21:27:35 - Response preparado
2025-08-27 21:27:43 - Solicitud recibida
2025-08-27 21:27:43 - Conexión BD OK
2025-08-27 21:27:43 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38"}
2025-08-27 21:27:43 - Es para Excel: NO
2025-08-27 21:27:43 - SQL Stats: SELECT 
                                COUNT(*) as total_cfdis,
                                SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                                AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                                c.tipo_comprobante as tipo,
                                COUNT(*) as cantidad_por_tipo
                            FROM cfdi c
                            LEFT JOIN emisor e ON c.id = e.cfdi_id
                            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 21:27:43 - SQL Data: SELECT 
                            c.uuid, c.fecha, e.rfc as emisor_rfc, e.nombre as emisor_nombre,
                            '' as receptor_rfc, '' as receptor_nombre, c.total, c.moneda, c.tipo_comprobante as tipo
                        FROM cfdi c
                        LEFT JOIN emisor e ON c.id = e.cfdi_id
                        WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 21:27:43 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:27:43 - Resultados tabla: 500
2025-08-27 21:27:43 - Resultados stats: 4
2025-08-27 21:27:45 - Response preparado
2025-08-27 21:30:07 - Solicitud recibida
2025-08-27 21:30:07 - Conexión BD OK
2025-08-27 21:30:07 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 21:30:07 - Es para Excel: NO
2025-08-27 21:30:07 - SQL Stats: SELECT 
                                COUNT(*) as total_cfdis,
                                SUM(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as total_facturado,
                                AVG(CASE WHEN c.total IS NOT NULL THEN c.total ELSE 0 END) as promedio_ticket,
                                c.tipo_comprobante as tipo,
                                COUNT(*) as cantidad_por_tipo
                            FROM cfdi c
                            LEFT JOIN emisor e ON c.id = e.cfdi_id
                            WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY c.tipo_comprobante
2025-08-27 21:30:07 - SQL Data: SELECT 
                            c.uuid, c.fecha, e.rfc as emisor_rfc, e.nombre as emisor_nombre,
                            '' as receptor_rfc, '' as receptor_nombre, c.total, c.moneda, c.tipo_comprobante as tipo
                        FROM cfdi c
                        LEFT JOIN emisor e ON c.id = e.cfdi_id
                        WHERE c.uuid IS NOT NULL AND e.rfc = :rfc AND DATE(c.fecha) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY c.fecha DESC LIMIT 500
2025-08-27 21:30:07 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 21:30:07 - Resultados tabla: 70
2025-08-27 21:30:07 - Resultados stats: 3
2025-08-27 21:30:09 - Response preparado
2025-08-27 21:49:09 - Solicitud recibida
2025-08-27 21:49:09 - Conexión BD OK
2025-08-27 21:49:09 - Filtros: []
2025-08-27 21:49:39 - Solicitud recibida
2025-08-27 21:49:39 - Conexión BD OK
2025-08-27 21:49:39 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 21:49:39 - Es para Excel: SI
2025-08-27 21:49:39 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha_emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:49:39 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, descuento, total, moneda, tipo_cambio, forma_pago_descripcion, metodo_pago,
                        base_iva_16, base_iva_0, base_iva_exento, iva, iva_retenido, isr_retenido
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(fecha_emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY fecha_emision DESC LIMIT 500
2025-08-27 21:49:39 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:49:39 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'fecha_emision' in 'where clause'
2025-08-27 21:50:13 - Solicitud recibida
2025-08-27 21:50:13 - Conexión BD OK
2025-08-27 21:50:13 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 21:50:13 - Es para Excel: SI
2025-08-27 21:50:13 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:50:13 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, descuento, total, moneda, tipo_cambio, forma_pago_descripcion, metodo_pago,
                        base_iva_16, base_iva_0, base_iva_exento, iva, iva_retenido, isr_retenido
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:50:13 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:50:15 - Resultados tabla: 500
2025-08-27 21:50:15 - Resultados stats: 4
2025-08-27 21:50:17 - Response preparado
2025-08-27 21:50:26 - Solicitud recibida
2025-08-27 21:50:26 - Conexión BD OK
2025-08-27 21:50:26 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 21:50:26 - Es para Excel: SI
2025-08-27 21:50:26 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:50:26 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, descuento, total, moneda, tipo_cambio, forma_pago_descripcion, metodo_pago,
                        base_iva_16, base_iva_0, base_iva_exento, iva, iva_retenido, isr_retenido
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:50:26 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:50:28 - Resultados tabla: 500
2025-08-27 21:50:28 - Resultados stats: 4
2025-08-27 21:50:31 - Response preparado
2025-08-27 21:50:39 - Solicitud recibida
2025-08-27 21:50:39 - Conexión BD OK
2025-08-27 21:50:39 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 21:50:39 - Es para Excel: SI
2025-08-27 21:50:39 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:50:39 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, descuento, total, moneda, tipo_cambio, forma_pago_descripcion, metodo_pago,
                        base_iva_16, base_iva_0, base_iva_exento, iva, iva_retenido, isr_retenido
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:50:39 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:50:41 - Resultados tabla: 500
2025-08-27 21:50:41 - Resultados stats: 4
2025-08-27 21:50:43 - Response preparado
2025-08-27 21:51:01 - Solicitud recibida
2025-08-27 21:51:01 - Conexión BD OK
2025-08-27 21:51:01 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-28 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 21:51:01 - Es para Excel: NO
2025-08-27 21:51:01 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:51:01 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:51:01 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-28",":fecha_fin":"2025-08-27"}
2025-08-27 21:51:02 - Resultados tabla: 70
2025-08-27 21:51:02 - Resultados stats: 3
2025-08-27 21:51:02 - Response preparado
2025-08-27 21:57:29 - Solicitud recibida
2025-08-27 21:57:29 - Conexión BD OK
2025-08-27 21:57:29 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 21:57:29 - Es para Excel: SI
2025-08-27 21:57:29 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:57:29 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, descuento, total, moneda, tipo_cambio, forma_pago_descripcion, metodo_pago,
                        base_iva_16, base_iva_0, base_iva_exento, iva, iva_retenido, isr_retenido
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:57:29 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:57:31 - Resultados tabla: 500
2025-08-27 21:57:31 - Resultados stats: 4
2025-08-27 21:57:34 - Response preparado
2025-08-27 21:57:48 - Solicitud recibida
2025-08-27 21:57:48 - Conexión BD OK
2025-08-27 21:57:48 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 21:57:48 - Es para Excel: SI
2025-08-27 21:57:48 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:57:48 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, descuento, total, moneda, tipo_cambio, forma_pago_descripcion, metodo_pago,
                        base_iva_16, base_iva_0, base_iva_exento, iva, iva_retenido, isr_retenido
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:57:48 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:57:50 - Resultados tabla: 500
2025-08-27 21:57:50 - Resultados stats: 4
2025-08-27 21:57:53 - Response preparado
2025-08-27 21:58:24 - Solicitud recibida
2025-08-27 21:58:24 - Conexión BD OK
2025-08-27 21:58:24 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 21:58:24 - Es para Excel: SI
2025-08-27 21:58:24 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:58:24 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, descuento, total, moneda, tipo_cambio, forma_pago_descripcion, metodo_pago,
                        base_iva_16, base_iva_0, base_iva_exento, iva, iva_retenido, isr_retenido
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:58:24 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:58:27 - Resultados tabla: 500
2025-08-27 21:58:27 - Resultados stats: 4
2025-08-27 21:58:29 - Response preparado
2025-08-27 21:59:12 - Solicitud recibida
2025-08-27 21:59:12 - Conexión BD OK
2025-08-27 21:59:12 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 21:59:12 - Es para Excel: SI
2025-08-27 21:59:12 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 21:59:12 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, descuento, total, moneda, tipo_cambio, forma_pago_descripcion, metodo_pago,
                        base_iva_16, base_iva_0, base_iva_exento, iva, iva_retenido, isr_retenido
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 21:59:12 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 21:59:14 - Resultados tabla: 500
2025-08-27 21:59:14 - Resultados stats: 4
2025-08-27 21:59:16 - Response preparado
2025-08-27 22:21:40 - Solicitud recibida
2025-08-27 22:21:40 - Conexión BD OK
2025-08-27 22:21:40 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 22:21:40 - Es para Excel: SI
2025-08-27 22:21:40 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 22:21:40 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, descuento, total, moneda, tipo_cambio, forma_pago_descripcion, metodo_pago,
                        base_iva_16, base_iva_0, base_iva_exento, iva, iva_retenido, isr_retenido
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 22:21:40 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 22:21:57 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'receptor_rfc' in 'field list'
2025-08-27 22:22:07 - Solicitud recibida
2025-08-27 22:22:07 - Conexión BD OK
2025-08-27 22:22:07 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 22:22:07 - Es para Excel: SI
2025-08-27 22:22:07 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 22:22:07 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, descuento, total, moneda, tipo_cambio, forma_pago_descripcion, metodo_pago,
                        base_iva_16, base_iva_0, base_iva_exento, iva, iva_retenido, isr_retenido
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 22:22:07 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 22:22:23 - Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'receptor_rfc' in 'field list'
2025-08-27 22:26:47 - Solicitud recibida
2025-08-27 22:26:47 - Conexión BD OK
2025-08-27 22:26:47 - Filtros: {"tipo":"emitidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","emisor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 22:26:47 - Es para Excel: SI
2025-08-27 22:26:47 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 22:26:47 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal,
                        base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                        iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                        moneda, forma_pago_descripcion, metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 22:26:47 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 22:27:23 - Resultados tabla: 500
2025-08-27 22:27:23 - Resultados stats: 4
2025-08-27 22:27:57 - Response preparado
2025-08-27 22:28:08 - Solicitud recibida
2025-08-27 22:28:08 - Conexión BD OK
2025-08-27 22:28:08 - Filtros: {"tipo":"recibidos","fecha_inicio":"2024-01-01","fecha_fin":"2024-12-31","receptor_rfc":"BFM170822P38","excel":"1"}
2025-08-27 22:28:08 - Es para Excel: SI
2025-08-27 22:28:08 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 22:28:08 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal,
                        base_iva_16, base_iva_0, base_iva_exento, descuento, iva, impto_loc_tras,
                        iva_retenido, isr_retenido, total, total_original_xml, tipo_cambio, 
                        moneda, forma_pago_descripcion, metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 22:28:08 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2024-01-01",":fecha_fin":"2024-12-31"}
2025-08-27 22:28:43 - Resultados tabla: 500
2025-08-27 22:28:43 - Resultados stats: 2
2025-08-27 22:28:43 - Response preparado
2025-08-27 22:29:30 - Solicitud recibida
2025-08-27 22:29:30 - Conexión BD OK
2025-08-27 22:29:30 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-06-01 a 2025-06-30","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 22:29:30 - Es para Excel: NO
2025-08-27 22:29:30 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 22:29:30 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 22:29:30 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-06-01",":fecha_fin":"2025-06-30"}
2025-08-27 22:30:02 - Resultados tabla: 106
2025-08-27 22:30:02 - Resultados stats: 3
2025-08-27 22:30:35 - Response preparado
2025-08-27 23:04:04 - Solicitud recibida
2025-08-27 23:04:04 - Conexión BD OK
2025-08-27 23:04:04 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-06-01 a 2025-06-30","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 23:04:04 - Es para Excel: NO
2025-08-27 23:04:04 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 23:04:04 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 23:04:04 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-06-01",":fecha_fin":"2025-06-30"}
2025-08-27 23:04:36 - Resultados tabla: 106
2025-08-27 23:04:36 - Resultados stats: 3
2025-08-27 23:05:07 - Response preparado
2025-08-27 23:33:59 - Solicitud recibida
2025-08-27 23:34:00 - Conexión BD OK
2025-08-27 23:34:00 - Filtros: {"rfc":"XAXX010101000","tipoReporte":"emitidas","fechaInicio":"2024-01-01","fechaFin":"2024-12-31","formato":"excel"}
2025-08-27 23:34:00 - Es para Excel: NO
2025-08-27 23:34:00 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND (emisor_rfc = :rfc OR receptor_rfc = :rfc) GROUP BY tipo
2025-08-27 23:34:00 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND (emisor_rfc = :rfc OR receptor_rfc = :rfc) ORDER BY emision DESC LIMIT 500
2025-08-27 23:34:00 - Params: {":rfc":"XAXX010101000"}
2025-08-27 23:35:09 - Resultados tabla: 1
2025-08-27 23:35:09 - Resultados stats: 1
2025-08-27 23:38:23 - Solicitud recibida
2025-08-27 23:38:23 - Conexión BD OK
2025-08-27 23:38:23 - Filtros: {"tipoReporte":"emitidos","rfc":"BLM1706026AA","fechas":"2025-06-01 a 2025-06-30","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 23:38:23 - Es para Excel: NO
2025-08-27 23:38:23 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 23:38:23 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 23:38:23 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-06-01",":fecha_fin":"2025-06-30"}
2025-08-27 23:39:35 - Resultados tabla: 301
2025-08-27 23:39:35 - Resultados stats: 3
2025-08-27 23:41:14 - Solicitud recibida
2025-08-27 23:41:14 - Conexión BD OK
2025-08-27 23:41:14 - Filtros: {"rfc":"XAXX010101000","tipoReporte":"emitidas","fechaInicio":"2024-01-01","fechaFin":"2024-01-05","formato":"excel"}
2025-08-27 23:41:14 - Es para Excel: NO
2025-08-27 23:41:14 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND (emisor_rfc = :rfc OR receptor_rfc = :rfc) GROUP BY tipo
2025-08-27 23:41:14 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND (emisor_rfc = :rfc OR receptor_rfc = :rfc) ORDER BY emision DESC LIMIT 500
2025-08-27 23:41:14 - Params: {":rfc":"XAXX010101000"}
2025-08-27 23:41:45 - Resultados tabla: 1
2025-08-27 23:41:45 - Resultados stats: 1
2025-08-27 23:42:18 - Response preparado
2025-08-27 23:42:53 - Solicitud recibida
2025-08-27 23:42:53 - Conexión BD OK
2025-08-27 23:42:53 - Filtros: {"rfc":"XAXX010101000","tipoReporte":"emitidas","fechaInicio":"2024-01-01","fechaFin":"2024-01-05","formato":"excel","excel":"1"}
2025-08-27 23:42:53 - Es para Excel: SI
2025-08-27 23:42:53 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND (emisor_rfc = :rfc OR receptor_rfc = :rfc) GROUP BY tipo
2025-08-27 23:42:53 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal,
                        base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        '' as impto_loc_tras, iva_retenido, isr_retenido, total, total as total_original_xml,
                        tipo_cambio, moneda, forma_pago_descripcion, metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND (emisor_rfc = :rfc OR receptor_rfc = :rfc) ORDER BY emision DESC LIMIT 500
2025-08-27 23:42:53 - Params: {":rfc":"XAXX010101000"}
2025-08-27 23:43:26 - Resultados tabla: 1
2025-08-27 23:43:26 - Resultados stats: 1
2025-08-27 23:43:58 - Response preparado
2025-08-27 23:47:16 - Solicitud recibida
2025-08-27 23:47:16 - Conexión BD OK
2025-08-27 23:47:16 - Filtros: {"tipoReporte":"emitidos","rfc":"BLM1706026AA","fechas":"2025-06-01 a 2025-06-30","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-27 23:47:16 - Es para Excel: NO
2025-08-27 23:47:16 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-27 23:47:16 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-27 23:47:16 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-06-01",":fecha_fin":"2025-06-30"}
2025-08-27 23:47:49 - Resultados tabla: 301
2025-08-27 23:47:49 - Resultados stats: 3
2025-08-27 23:48:21 - Response preparado
2025-08-27 23:48:37 - Solicitud recibida
2025-08-27 23:48:37 - Conexión BD OK
2025-08-27 23:48:37 - Filtros: {"rfc":"BLM1706026AA","tipoReporte":"emitidos","fechaInicio":"2025-06-01","fechaFin":"2025-06-30","excel":"1"}
2025-08-27 23:48:37 - Es para Excel: SI
2025-08-27 23:48:37 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc GROUP BY tipo
2025-08-27 23:48:37 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        emisor_regimen_fiscal_descripcion, conceptos_descripcion, subtotal,
                        base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        '' as impto_loc_tras, iva_retenido, isr_retenido, total, total as total_original_xml,
                        tipo_cambio, moneda, forma_pago_descripcion, metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc ORDER BY emision DESC LIMIT 500
2025-08-27 23:48:37 - Params: {":rfc":"BLM1706026AA"}
2025-08-27 23:49:13 - Resultados tabla: 500
2025-08-27 23:49:13 - Resultados stats: 4
2025-08-27 23:49:48 - Response preparado
2025-08-28 00:18:33 - Solicitud recibida
2025-08-28 00:18:34 - Conexión BD OK
2025-08-28 00:18:34 - Filtros: {"rfc":"XAXX010101000","tipoReporte":"emitidas","fechaInicio":"2024-01-01","fechaFin":"2024-01-02","formato":"excel","excel":"1"}
2025-08-28 00:18:34 - Es para Excel: SI
2025-08-28 00:18:34 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND (emisor_rfc = :rfc OR receptor_rfc = :rfc) GROUP BY tipo
2025-08-28 00:18:34 - SQL Data: SELECT 
                        sello, sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, moneda, forma_pago_descripcion, metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND (emisor_rfc = :rfc OR receptor_rfc = :rfc) ORDER BY emision DESC LIMIT 500
2025-08-28 00:18:34 - Params: {":rfc":"XAXX010101000"}
2025-08-28 00:19:08 - Resultados tabla: 1
2025-08-28 00:19:08 - Resultados stats: 1
2025-08-28 00:19:44 - Response preparado
2025-08-28 00:25:53 - Solicitud recibida
2025-08-28 00:25:53 - Conexión BD OK
2025-08-28 00:25:53 - Filtros: {"rfc":"XAXX010101000","tipoReporte":"emitidas","fechaInicio":"2024-01-01","fechaFin":"2024-01-02","formato":"excel","excel":"1"}
2025-08-28 00:25:53 - Es para Excel: SI
2025-08-28 00:25:53 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND (emisor_rfc = :rfc OR receptor_rfc = :rfc) GROUP BY tipo
2025-08-28 00:25:53 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, estatus, ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, uso_cfdi_descripcion, emisor_rfc, emisor_nombre,
                        receptor_rfc, receptor_nombre, emisor_regimen_fiscal_descripcion, conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, moneda, forma_pago_descripcion, metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND (emisor_rfc = :rfc OR receptor_rfc = :rfc) ORDER BY emision DESC LIMIT 500
2025-08-28 00:25:53 - Params: {":rfc":"XAXX010101000"}
2025-08-28 00:26:26 - Resultados tabla: 1
2025-08-28 00:26:26 - Resultados stats: 1
2025-08-28 00:27:01 - Response preparado
2025-08-28 01:53:01 - Solicitud recibida
2025-08-28 01:53:01 - Conexión BD OK
2025-08-28 01:53:01 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-01 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 01:53:01 - Es para Excel: NO
2025-08-28 01:53:01 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 01:53:01 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 01:53:01 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-08-27"}
2025-08-28 01:53:16 - Resultados tabla: 157
2025-08-28 01:53:16 - Resultados stats: 3
2025-08-28 01:53:33 - Response preparado
2025-08-28 02:29:08 - Solicitud recibida
2025-08-28 02:29:08 - Conexión BD OK
2025-08-28 02:29:08 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-01 a 2025-08-27","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 02:29:08 - Es para Excel: NO
2025-08-28 02:29:08 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 02:29:08 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 02:29:08 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-08-27"}
2025-08-28 02:29:44 - Solicitud recibida
2025-08-28 02:29:44 - Conexión BD OK
2025-08-28 02:29:44 - Filtros: {"tipoReporte":"emitidos","rfc":"BLM1706026AA","fechas":"2025-06-01 a 2025-06-30","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 02:29:44 - Es para Excel: NO
2025-08-28 02:29:44 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 02:29:44 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 02:29:44 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-06-01",":fecha_fin":"2025-06-30"}
2025-08-28 02:29:49 - Resultados tabla: 157
2025-08-28 02:29:49 - Resultados stats: 3
2025-08-28 02:30:25 - Resultados tabla: 301
2025-08-28 02:30:25 - Resultados stats: 3
2025-08-28 02:30:28 - Response preparado
2025-08-28 02:30:58 - Response preparado
2025-08-28 02:31:53 - Solicitud recibida
2025-08-28 02:31:53 - Conexión BD OK
2025-08-28 02:31:53 - Filtros: {"tipoReporte":"emitidos","rfc":"BLM1706026AA","fechas":"2025-06-01 a 2025-06-30","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 02:31:53 - Es para Excel: NO
2025-08-28 02:31:53 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 02:31:53 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 02:31:53 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-06-01",":fecha_fin":"2025-06-30"}
2025-08-28 02:32:13 - Solicitud recibida
2025-08-28 02:32:13 - Conexión BD OK
2025-08-28 02:32:13 - Filtros: []
2025-08-28 02:32:24 - Resultados tabla: 301
2025-08-28 02:32:24 - Resultados stats: 3
2025-08-28 02:32:57 - Response preparado
2025-08-28 02:35:32 - Solicitud recibida
2025-08-28 02:35:32 - Conexión BD OK
2025-08-28 02:35:32 - Filtros: {"rfc":"BLM1706026AA","tipoReporte":"emitidos","fechaInicio":"2025-06-01","fechaFin":"2025-06-30","excel":"1"}
2025-08-28 02:35:32 - Es para Excel: SI
2025-08-28 02:35:32 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc GROUP BY tipo
2025-08-28 02:35:32 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc ORDER BY emision DESC LIMIT 500
2025-08-28 02:35:32 - Params: {":rfc":"BLM1706026AA"}
2025-08-28 02:36:04 - Resultados tabla: 500
2025-08-28 02:36:04 - Resultados stats: 4
2025-08-28 02:36:37 - Response preparado
2025-08-28 02:37:01 - Solicitud recibida
2025-08-28 02:37:01 - Conexión BD OK
2025-08-28 02:37:01 - Filtros: {"rfc":"YOUR_RFC_HERE","tipo":"complementos"}
2025-08-28 02:37:01 - Es para Excel: NO
2025-08-28 02:37:01 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as promedio_ticket,
                        'P' as tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_complementos_pago cp
                    INNER JOIN cfdi c ON cp.cfdi_id = c.id
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) GROUP BY tipo
2025-08-28 02:37:01 - SQL Data: SELECT 
                    cp.uuid,
                    cp.fecha_pago as emision,
                    IFNULL(e.rfc, 'N/A') as emisor_rfc,
                    IFNULL(e.nombre, 'N/A') as emisor_nombre,
                    IFNULL(r.rfc, 'N/A') as receptor_rfc,
                    IFNULL(r.nombre, 'N/A') as receptor_nombre,
                    cp.monto as total,
                    cp.moneda_p as moneda,
                    'P' as tipo,
                    cp.forma_pago_p as forma_pago,
                    cp.version_pago
                FROM v_complementos_pago cp
                INNER JOIN cfdi c ON cp.cfdi_id = c.id
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) ORDER BY emision DESC LIMIT 500
2025-08-28 02:37:01 - Params: {":rfc":"YOUR_RFC_HERE"}
2025-08-28 02:37:05 - Resultados tabla: 0
2025-08-28 02:37:05 - Resultados stats: 0
2025-08-28 02:37:07 - Response preparado
2025-08-28 02:37:34 - Solicitud recibida
2025-08-28 02:37:34 - Conexión BD OK
2025-08-28 02:37:34 - Filtros: {"tipoReporte":"emitidos","rfc":"BLM1706026AA","fechas":"2025-06-01 a 2025-06-30","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 02:37:34 - Es para Excel: NO
2025-08-28 02:37:34 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 02:37:34 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 02:37:34 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-06-01",":fecha_fin":"2025-06-30"}
2025-08-28 02:38:06 - Resultados tabla: 301
2025-08-28 02:38:06 - Resultados stats: 3
2025-08-28 02:38:38 - Response preparado
2025-08-28 16:34:52 - Solicitud recibida
2025-08-28 16:34:52 - Conexión BD OK
2025-08-28 16:34:52 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-06-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 16:34:53 - Es para Excel: NO
2025-08-28 16:34:53 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 16:34:53 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 16:34:53 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-06-01",":fecha_fin":"2025-07-31"}
2025-08-28 16:35:24 - Resultados tabla: 206
2025-08-28 16:35:24 - Resultados stats: 3
2025-08-28 16:35:56 - Response preparado
2025-08-28 16:37:01 - Solicitud recibida
2025-08-28 16:37:01 - Conexión BD OK
2025-08-28 16:37:01 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-31 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 16:37:01 - Es para Excel: NO
2025-08-28 16:37:01 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 16:37:01 - SQL Data: SELECT 
                        uuid, emision as fecha, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 16:37:01 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-31",":fecha_fin":"2025-07-31"}
2025-08-28 16:37:33 - Resultados tabla: 6
2025-08-28 16:37:33 - Resultados stats: 2
2025-08-28 16:38:05 - Response preparado
2025-08-28 16:44:35 - Solicitud recibida
2025-08-28 16:44:35 - Conexión BD OK
2025-08-28 16:44:35 - Filtros: {"rfc":"YOUR_RFC_HERE","tipo":"complementos"}
2025-08-28 16:44:35 - Es para Excel: NO
2025-08-28 16:44:35 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN cp.monto IS NOT NULL THEN cp.monto ELSE 0 END) as promedio_ticket,
                        'P' as tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_complementos_pago cp
                    INNER JOIN cfdi c ON cp.cfdi_id = c.id
                    LEFT JOIN emisor e ON c.id = e.cfdi_id
                    LEFT JOIN receptor r ON c.id = r.cfdi_id
                    WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) GROUP BY tipo
2025-08-28 16:44:35 - SQL Data: SELECT 
                    cp.uuid,
                    c.fecha as emision,
                    IFNULL(e.rfc, 'N/A') as emisor_rfc,
                    IFNULL(e.nombre, 'N/A') as emisor_nombre,
                    IFNULL(r.rfc, 'N/A') as receptor_rfc,
                    IFNULL(r.nombre, 'N/A') as receptor_nombre,
                    cp.monto as total,
                    cp.moneda_p as moneda,
                    'P' as tipo,
                    cp.forma_pago_p as forma_pago,
                    cp.version_pago
                FROM v_complementos_pago cp
                INNER JOIN cfdi c ON cp.cfdi_id = c.id
                LEFT JOIN emisor e ON c.id = e.cfdi_id
                LEFT JOIN receptor r ON c.id = r.cfdi_id
                WHERE cp.uuid IS NOT NULL AND (e.rfc = :rfc OR r.rfc = :rfc) ORDER BY emision DESC LIMIT 500
2025-08-28 16:44:35 - Params: {":rfc":"YOUR_RFC_HERE"}
2025-08-28 16:44:38 - Resultados tabla: 0
2025-08-28 16:44:38 - Resultados stats: 0
2025-08-28 16:44:40 - Response preparado
2025-08-28 16:55:20 - Solicitud recibida
2025-08-28 16:55:20 - Conexión BD OK
2025-08-28 16:55:20 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-31 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 16:55:20 - Es para Excel: NO
2025-08-28 16:55:20 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 16:55:20 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 16:55:20 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-31",":fecha_fin":"2025-07-31"}
2025-08-28 16:55:54 - Resultados tabla: 6
2025-08-28 16:55:54 - Resultados stats: 2
2025-08-28 16:56:26 - Response preparado
2025-08-28 16:58:14 - Solicitud recibida
2025-08-28 16:58:14 - Conexión BD OK
2025-08-28 16:58:14 - Filtros: {"rfc":"BFM170822P38","tipoReporte":"emitidos","fechaInicio":"2025-07-31","fechaFin":"2025-07-31","excel":"1"}
2025-08-28 16:58:14 - Es para Excel: SI
2025-08-28 16:58:14 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc GROUP BY tipo
2025-08-28 16:58:14 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc ORDER BY emision DESC LIMIT 500
2025-08-28 16:58:14 - Params: {":rfc":"BFM170822P38"}
2025-08-28 16:58:39 - Solicitud recibida
2025-08-28 16:58:39 - Conexión BD OK
2025-08-28 16:58:39 - Filtros: {"tipoReporte":"recibidos","rfc":"BFM170822P38","fechas":"2025-07-31 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 16:58:39 - Es para Excel: NO
2025-08-28 16:58:39 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 16:58:39 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 16:58:39 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-31",":fecha_fin":"2025-07-31"}
2025-08-28 16:58:46 - Resultados tabla: 500
2025-08-28 16:58:46 - Resultados stats: 4
2025-08-28 16:59:12 - Resultados tabla: 4
2025-08-28 16:59:12 - Resultados stats: 2
2025-08-28 16:59:12 - Response preparado
2025-08-28 16:59:19 - Response preparado
2025-08-28 17:33:39 - Solicitud recibida
2025-08-28 17:33:39 - Conexión BD OK
2025-08-28 17:33:39 - Filtros: {"tipoReporte":"recibidos","rfc":"BLM1706026AA","fechas":"2025-07-29 a 2025-07-30","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 17:33:39 - Es para Excel: NO
2025-08-28 17:33:39 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 17:33:39 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 17:33:39 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-07-30"}
2025-08-28 17:34:21 - Resultados tabla: 23
2025-08-28 17:34:21 - Resultados stats: 3
2025-08-28 17:34:21 - Response preparado
2025-08-28 17:34:33 - Solicitud recibida
2025-08-28 17:34:33 - Conexión BD OK
2025-08-28 17:34:33 - Filtros: {"rfc":"BLM1706026AA","tipoReporte":"recibidos","fechaInicio":"2025-07-29","fechaFin":"2025-07-30","excel":"1"}
2025-08-28 17:34:33 - Es para Excel: SI
2025-08-28 17:34:33 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc GROUP BY tipo
2025-08-28 17:34:33 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc ORDER BY emision DESC LIMIT 500
2025-08-28 17:34:33 - Params: {":rfc":"BLM1706026AA"}
2025-08-28 17:35:14 - Resultados tabla: 500
2025-08-28 17:35:14 - Resultados stats: 3
2025-08-28 17:35:14 - Response preparado
2025-08-28 17:35:58 - Solicitud recibida
2025-08-28 17:35:58 - Conexión BD OK
2025-08-28 17:35:58 - Filtros: {"tipoReporte":"emitidos","rfc":"BLM1706026AA","fechas":"2025-07-29 a 2025-07-30","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 17:35:58 - Es para Excel: NO
2025-08-28 17:35:58 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 17:35:58 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 17:35:58 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-07-30"}
2025-08-28 17:36:38 - Resultados tabla: 2
2025-08-28 17:36:38 - Resultados stats: 2
2025-08-28 17:37:18 - Response preparado
2025-08-28 17:37:26 - Solicitud recibida
2025-08-28 17:37:26 - Conexión BD OK
2025-08-28 17:37:26 - Filtros: {"rfc":"BLM1706026AA","tipoReporte":"emitidos","fechaInicio":"2025-07-29","fechaFin":"2025-07-30","excel":"1"}
2025-08-28 17:37:26 - Es para Excel: SI
2025-08-28 17:37:26 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc GROUP BY tipo
2025-08-28 17:37:26 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc ORDER BY emision DESC LIMIT 500
2025-08-28 17:37:26 - Params: {":rfc":"BLM1706026AA"}
2025-08-28 17:38:07 - Resultados tabla: 500
2025-08-28 17:38:07 - Resultados stats: 4
2025-08-28 17:38:47 - Response preparado
2025-08-28 18:16:00 - Solicitud recibida
2025-08-28 18:16:00 - Conexión BD OK
2025-08-28 18:16:00 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-01 a 2025-07-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 18:16:00 - Es para Excel: NO
2025-08-28 18:16:00 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 18:16:00 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 18:16:00 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-31"}
2025-08-28 18:16:34 - Resultados tabla: 100
2025-08-28 18:16:34 - Resultados stats: 3
2025-08-28 18:17:09 - Response preparado
2025-08-28 18:26:48 - Solicitud recibida
2025-08-28 18:26:48 - Conexión BD OK
2025-08-28 18:26:48 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-01 a 2025-07-01","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 18:26:48 - Es para Excel: NO
2025-08-28 18:26:48 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 18:26:48 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 18:26:48 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-01",":fecha_fin":"2025-07-01"}
2025-08-28 18:27:21 - Resultados tabla: 4
2025-08-28 18:27:21 - Resultados stats: 1
2025-08-28 18:27:53 - Response preparado
2025-08-28 18:32:19 - Solicitud recibida
2025-08-28 18:32:19 - Conexión BD OK
2025-08-28 18:32:19 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 18:32:19 - Es para Excel: NO
2025-08-28 18:32:19 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 18:32:19 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 18:32:19 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 18:32:54 - Resultados tabla: 70
2025-08-28 18:32:54 - Resultados stats: 3
2025-08-28 18:33:28 - Response preparado
2025-08-28 18:36:22 - Solicitud recibida
2025-08-28 18:36:22 - Conexión BD OK
2025-08-28 18:36:22 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 18:36:22 - Es para Excel: NO
2025-08-28 18:36:22 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 18:36:22 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 18:36:22 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 18:36:45 - Solicitud recibida
2025-08-28 18:36:45 - Conexión BD OK
2025-08-28 18:36:45 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 18:36:45 - Es para Excel: NO
2025-08-28 18:36:45 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 18:36:45 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 18:36:45 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 18:36:54 - Resultados tabla: 70
2025-08-28 18:36:54 - Resultados stats: 3
2025-08-28 18:37:18 - Resultados tabla: 70
2025-08-28 18:37:18 - Resultados stats: 3
2025-08-28 18:37:27 - Response preparado
2025-08-28 18:37:50 - Response preparado
2025-08-28 18:55:04 - Solicitud recibida
2025-08-28 18:55:04 - Conexión BD OK
2025-08-28 18:55:04 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 18:55:04 - Es para Excel: NO
2025-08-28 18:55:05 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 18:55:05 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 18:55:05 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 18:55:45 - Resultados tabla: 70
2025-08-28 18:55:45 - Resultados stats: 3
2025-08-28 18:56:25 - Response preparado
2025-08-28 19:00:21 - Solicitud recibida
2025-08-28 19:00:21 - Conexión BD OK
2025-08-28 19:00:21 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 19:00:21 - Es para Excel: NO
2025-08-28 19:00:21 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:00:21 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:00:21 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 19:01:02 - Resultados tabla: 70
2025-08-28 19:01:02 - Resultados stats: 3
2025-08-28 19:01:40 - Response preparado
2025-08-28 19:06:25 - Solicitud recibida
2025-08-28 19:06:25 - Conexión BD OK
2025-08-28 19:06:25 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 19:06:25 - Es para Excel: NO
2025-08-28 19:06:25 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:06:25 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:06:25 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 19:07:05 - Resultados tabla: 70
2025-08-28 19:07:05 - Resultados stats: 3
2025-08-28 19:07:45 - Response preparado
2025-08-28 19:15:54 - Solicitud recibida
2025-08-28 19:15:54 - Conexión BD OK
2025-08-28 19:15:54 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 19:15:54 - Es para Excel: NO
2025-08-28 19:15:54 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:15:54 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:15:54 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 19:16:35 - Resultados tabla: 70
2025-08-28 19:16:35 - Resultados stats: 3
2025-08-28 19:17:14 - Response preparado
2025-08-28 19:22:46 - Solicitud recibida
2025-08-28 19:22:46 - Conexión BD OK
2025-08-28 19:22:46 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 19:22:46 - Es para Excel: NO
2025-08-28 19:22:46 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:22:46 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:22:46 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 19:23:26 - Resultados tabla: 70
2025-08-28 19:23:26 - Resultados stats: 3
2025-08-28 19:24:06 - Response preparado
2025-08-28 19:40:57 - Solicitud recibida
2025-08-28 19:40:57 - Conexión BD OK
2025-08-28 19:40:57 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 19:40:57 - Es para Excel: NO
2025-08-28 19:40:57 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:40:57 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:40:57 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 19:41:38 - Resultados tabla: 70
2025-08-28 19:41:38 - Resultados stats: 3
2025-08-28 19:42:19 - Response preparado
2025-08-28 19:42:23 - Solicitud recibida
2025-08-28 19:42:23 - Conexión BD OK
2025-08-28 19:42:23 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":"","excel":"1"}
2025-08-28 19:42:23 - Es para Excel: SI
2025-08-28 19:42:23 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:42:23 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:42:23 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 19:42:30 - Solicitud recibida
2025-08-28 19:42:30 - Conexión BD OK
2025-08-28 19:42:30 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":"","excel":"1"}
2025-08-28 19:42:30 - Es para Excel: SI
2025-08-28 19:42:30 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:42:30 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:42:30 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 19:43:04 - Resultados tabla: 70
2025-08-28 19:43:04 - Resultados stats: 3
2025-08-28 19:43:11 - Resultados tabla: 70
2025-08-28 19:43:11 - Resultados stats: 3
2025-08-28 19:43:45 - Response preparado
2025-08-28 19:43:52 - Response preparado
2025-08-28 19:45:45 - Solicitud recibida
2025-08-28 19:45:46 - Conexión BD OK
2025-08-28 19:45:46 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":"","excel":"1"}
2025-08-28 19:45:46 - Es para Excel: SI
2025-08-28 19:45:46 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:45:46 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:45:46 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 19:46:24 - Resultados tabla: 70
2025-08-28 19:46:24 - Resultados stats: 3
2025-08-28 19:46:55 - Response preparado
2025-08-28 19:50:12 - Solicitud recibida
2025-08-28 19:50:12 - Conexión BD OK
2025-08-28 19:50:12 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 19:50:12 - Es para Excel: NO
2025-08-28 19:50:12 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:50:12 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:50:12 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 19:50:51 - Resultados tabla: 70
2025-08-28 19:50:51 - Resultados stats: 3
2025-08-28 19:51:31 - Response preparado
2025-08-28 19:51:40 - Solicitud recibida
2025-08-28 19:51:40 - Conexión BD OK
2025-08-28 19:51:40 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":"","excel":"1"}
2025-08-28 19:51:40 - Es para Excel: SI
2025-08-28 19:51:40 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:51:40 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:51:40 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 19:52:21 - Resultados tabla: 70
2025-08-28 19:52:21 - Resultados stats: 3
2025-08-28 19:53:02 - Response preparado
2025-08-28 19:58:21 - Solicitud recibida
2025-08-28 19:58:21 - Conexión BD OK
2025-08-28 19:58:21 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 19:58:21 - Es para Excel: NO
2025-08-28 19:58:21 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:58:21 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:58:21 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 19:59:01 - Resultados tabla: 70
2025-08-28 19:59:01 - Resultados stats: 3
2025-08-28 19:59:37 - Response preparado
2025-08-28 19:59:53 - Solicitud recibida
2025-08-28 19:59:53 - Conexión BD OK
2025-08-28 19:59:53 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":"","excel":"1"}
2025-08-28 19:59:53 - Es para Excel: SI
2025-08-28 19:59:53 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 19:59:53 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 19:59:53 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 20:00:25 - Resultados tabla: 70
2025-08-28 20:00:25 - Resultados stats: 3
2025-08-28 20:00:59 - Response preparado
2025-08-28 20:16:43 - Solicitud recibida
2025-08-28 20:16:43 - Conexión BD OK
2025-08-28 20:16:43 - Filtros: {"tipoReporte":"recibidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 20:16:43 - Es para Excel: NO
2025-08-28 20:16:43 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:16:43 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:16:43 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 20:17:15 - Resultados tabla: 42
2025-08-28 20:17:15 - Resultados stats: 2
2025-08-28 20:17:15 - Response preparado
2025-08-28 20:17:18 - Solicitud recibida
2025-08-28 20:17:18 - Conexión BD OK
2025-08-28 20:17:18 - Filtros: {"tipoReporte":"recibidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":"","excel":"1"}
2025-08-28 20:17:18 - Es para Excel: SI
2025-08-28 20:17:18 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:17:18 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:17:18 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 20:17:51 - Resultados tabla: 42
2025-08-28 20:17:51 - Resultados stats: 2
2025-08-28 20:17:52 - Response preparado
2025-08-28 20:18:23 - Solicitud recibida
2025-08-28 20:18:23 - Conexión BD OK
2025-08-28 20:18:23 - Filtros: {"tipoReporte":"recibidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":"","excel":"1"}
2025-08-28 20:18:23 - Es para Excel: SI
2025-08-28 20:18:23 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:18:23 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:18:23 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 20:18:57 - Resultados tabla: 42
2025-08-28 20:18:57 - Resultados stats: 2
2025-08-28 20:18:57 - Response preparado
2025-08-28 20:29:46 - Solicitud recibida
2025-08-28 20:29:46 - Conexión BD OK
2025-08-28 20:29:46 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-08-01 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 20:29:46 - Es para Excel: NO
2025-08-28 20:29:46 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:29:46 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:29:46 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-28"}
2025-08-28 20:30:22 - Resultados tabla: 57
2025-08-28 20:30:22 - Resultados stats: 3
2025-08-28 20:30:57 - Response preparado
2025-08-28 20:31:29 - Solicitud recibida
2025-08-28 20:31:29 - Conexión BD OK
2025-08-28 20:31:29 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-08-01 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":"","excel":"1"}
2025-08-28 20:31:29 - Es para Excel: SI
2025-08-28 20:31:29 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:31:29 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:31:29 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-28"}
2025-08-28 20:32:05 - Resultados tabla: 57
2025-08-28 20:32:05 - Resultados stats: 3
2025-08-28 20:32:39 - Response preparado
2025-08-28 20:47:28 - Solicitud recibida
2025-08-28 20:47:28 - Conexión BD OK
2025-08-28 20:47:28 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-07-29 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 20:47:28 - Es para Excel: NO
2025-08-28 20:47:28 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:47:28 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:47:28 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-07-29",":fecha_fin":"2025-08-28"}
2025-08-28 20:48:01 - Resultados tabla: 70
2025-08-28 20:48:01 - Resultados stats: 3
2025-08-28 20:48:35 - Response preparado
2025-08-28 20:51:26 - Solicitud recibida
2025-08-28 20:51:26 - Conexión BD OK
2025-08-28 20:51:26 - Filtros: {"tipoReporte":"recibidos","rfc":"BLM1706026AA","fechas":"2025-08-01 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 20:51:26 - Es para Excel: NO
2025-08-28 20:51:26 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:51:26 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:51:26 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-28"}
2025-08-28 20:52:01 - Resultados tabla: 0
2025-08-28 20:52:01 - Resultados stats: 0
2025-08-28 20:52:01 - Response preparado
2025-08-28 20:52:24 - Solicitud recibida
2025-08-28 20:52:24 - Conexión BD OK
2025-08-28 20:52:24 - Filtros: {"tipoReporte":"recibidos","rfc":"BLM1706026AA","fechas":"2025-08-01 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 20:52:24 - Es para Excel: NO
2025-08-28 20:52:24 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:52:24 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:52:24 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-28"}
2025-08-28 20:52:59 - Resultados tabla: 0
2025-08-28 20:52:59 - Resultados stats: 0
2025-08-28 20:52:59 - Response preparado
2025-08-28 20:54:43 - Solicitud recibida
2025-08-28 20:54:43 - Conexión BD OK
2025-08-28 20:54:43 - Filtros: {"tipoReporte":"recibidos","rfc":"BLM1706026AA","fechas":"2025-08-01 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":"","excel":"1"}
2025-08-28 20:54:43 - Es para Excel: SI
2025-08-28 20:54:43 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:54:43 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:54:43 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-28"}
2025-08-28 20:55:17 - Resultados tabla: 0
2025-08-28 20:55:17 - Resultados stats: 0
2025-08-28 20:55:17 - Response preparado
2025-08-28 20:56:37 - Solicitud recibida
2025-08-28 20:56:37 - Conexión BD OK
2025-08-28 20:56:37 - Filtros: {"tipoReporte":"recibidos","rfc":"BLM1706026AA","fechas":"2025-08-01 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 20:56:37 - Es para Excel: NO
2025-08-28 20:56:37 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:56:37 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:56:37 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-28"}
2025-08-28 20:57:13 - Resultados tabla: 0
2025-08-28 20:57:13 - Resultados stats: 0
2025-08-28 20:57:13 - Response preparado
2025-08-28 20:57:29 - Solicitud recibida
2025-08-28 20:57:29 - Conexión BD OK
2025-08-28 20:57:29 - Filtros: {"tipoReporte":"recibidos","rfc":"BFM170822P38","fechas":"2025-08-01 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 20:57:29 - Es para Excel: NO
2025-08-28 20:57:29 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:57:29 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:57:29 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-28"}
2025-08-28 20:57:55 - Solicitud recibida
2025-08-28 20:57:55 - Conexión BD OK
2025-08-28 20:57:55 - Filtros: {"tipoReporte":"recibidos","rfc":"BFM170822P38","fechas":"2025-08-01 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 20:57:55 - Es para Excel: NO
2025-08-28 20:57:55 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:57:55 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:57:55 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-28"}
2025-08-28 20:58:03 - Resultados tabla: 35
2025-08-28 20:58:03 - Resultados stats: 2
2025-08-28 20:58:03 - Response preparado
2025-08-28 20:58:14 - Solicitud recibida
2025-08-28 20:58:14 - Conexión BD OK
2025-08-28 20:58:14 - Filtros: {"tipoReporte":"recibidos","rfc":"BFM170822P38","fechas":"2025-08-01 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":"","excel":"1"}
2025-08-28 20:58:14 - Es para Excel: SI
2025-08-28 20:58:14 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:58:14 - SQL Data: SELECT 
                        'Válido' as sello, 'Existe' as sat, 
                        CASE 
                            WHEN estatus LIKE '%lido%' THEN 'Válido'
                            WHEN estatus LIKE '%cancelado%' THEN 'Cancelado'
                            ELSE REPLACE(REPLACE(REPLACE(estatus, 'ß', 'á'), 'Ã', 'í'), '??', 'é')
                        END as estatus, 
                        ver, cfdi_relacionado, tipo, uuid, uuid_sustitucion, 
                        serie, folio, emision, 
                        REPLACE(REPLACE(REPLACE(uso_cfdi_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as uso_cfdi_descripcion, 
                        emisor_rfc, 
                        REPLACE(REPLACE(REPLACE(emisor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_nombre,
                        receptor_rfc, 
                        REPLACE(REPLACE(REPLACE(receptor_nombre, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as receptor_nombre, 
                        REPLACE(REPLACE(REPLACE(emisor_regimen_fiscal_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as emisor_regimen_fiscal_descripcion, 
                        REPLACE(REPLACE(REPLACE(conceptos_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as conceptos_descripcion, 
                        subtotal, base_iva_16, base_iva_0, base_iva_exento, descuento, iva,
                        impto_loc_tras, iva_retenido, isr_retenido, total, total_original_xml,
                        tipo_cambio, 
                        REPLACE(REPLACE(REPLACE(moneda, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as moneda, 
                        REPLACE(REPLACE(REPLACE(forma_pago_descripcion, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as forma_pago_descripcion, 
                        REPLACE(REPLACE(REPLACE(metodo_pago, 'ß', 'á'), 'Ã', 'í'), '??', 'é') as metodo_pago
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:58:14 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-28"}
2025-08-28 20:58:31 - Resultados tabla: 35
2025-08-28 20:58:31 - Resultados stats: 2
2025-08-28 20:58:31 - Response preparado
2025-08-28 20:58:42 - Solicitud recibida
2025-08-28 20:58:42 - Conexión BD OK
2025-08-28 20:58:42 - Filtros: {"tipoReporte":"recibidos","rfc":"BLM1706026AA","fechas":"2025-08-01 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 20:58:42 - Es para Excel: NO
2025-08-28 20:58:42 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:58:42 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:58:42 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-28"}
2025-08-28 20:58:49 - Resultados tabla: 35
2025-08-28 20:58:49 - Resultados stats: 2
2025-08-28 20:58:49 - Response preparado
2025-08-28 20:59:16 - Resultados tabla: 0
2025-08-28 20:59:16 - Resultados stats: 0
2025-08-28 20:59:16 - Response preparado
2025-08-28 20:59:37 - Solicitud recibida
2025-08-28 20:59:37 - Conexión BD OK
2025-08-28 20:59:37 - Filtros: {"tipoReporte":"emitidos","rfc":"BLM1706026AA","fechas":"2025-08-01 a 2025-08-28","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 20:59:37 - Es para Excel: NO
2025-08-28 20:59:37 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 20:59:37 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 20:59:37 - Params: {":rfc":"BLM1706026AA",":fecha_inicio":"2025-08-01",":fecha_fin":"2025-08-28"}
2025-08-28 21:00:11 - Resultados tabla: 3
2025-08-28 21:00:11 - Resultados stats: 1
2025-08-28 21:00:46 - Response preparado
2025-08-28 22:56:26 - Solicitud recibida
2025-08-28 22:56:26 - Conexión BD OK
2025-08-28 22:56:26 - Filtros: {"tipoReporte":"recibidos","rfc":"BFM170822P38","fechas":"2025-08-21 a 2025-08-21","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-08-28 22:56:26 - Es para Excel: NO
2025-08-28 22:56:26 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-08-28 22:56:26 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND receptor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-08-28 22:56:26 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-08-21",":fecha_fin":"2025-08-21"}
2025-08-28 22:57:00 - Resultados tabla: 0
2025-08-28 22:57:00 - Resultados stats: 0
2025-08-28 22:57:00 - Response preparado
2025-09-02 17:08:34 - Solicitud recibida
2025-09-02 17:08:34 - Conexión BD OK
2025-09-02 17:08:34 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-08-03 a 2025-08-31","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-09-02 17:08:34 - Es para Excel: NO
2025-09-02 17:08:34 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-09-02 17:08:34 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-09-02 17:08:34 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-08-03",":fecha_fin":"2025-08-31"}
2025-09-02 17:09:07 - Resultados tabla: 91
2025-09-02 17:09:07 - Resultados stats: 3
2025-09-02 17:09:38 - Response preparado
2025-09-02 17:49:37 - Solicitud recibida
2025-09-02 17:49:37 - Conexión BD OK
2025-09-02 17:49:37 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-08-03 a 2025-09-02","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-09-02 17:49:37 - Es para Excel: NO
2025-09-02 17:49:37 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-09-02 17:49:37 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-09-02 17:49:37 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-08-03",":fecha_fin":"2025-09-02"}
2025-09-02 17:50:18 - Resultados tabla: 91
2025-09-02 17:50:18 - Resultados stats: 3
2025-09-02 17:50:55 - Response preparado
2025-09-02 17:54:41 - Solicitud recibida
2025-09-02 17:54:41 - Conexión BD OK
2025-09-02 17:54:41 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-08-03 a 2025-09-02","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-09-02 17:54:41 - Es para Excel: NO
2025-09-02 17:54:41 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-09-02 17:54:41 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-09-02 17:54:41 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-08-03",":fecha_fin":"2025-09-02"}
2025-09-02 17:55:17 - Resultados tabla: 91
2025-09-02 17:55:17 - Resultados stats: 3
2025-09-02 17:55:49 - Response preparado
2025-09-02 18:12:08 - Solicitud recibida
2025-09-02 18:12:08 - Conexión BD OK
2025-09-02 18:12:08 - Filtros: {"tipoReporte":"emitidos","rfc":"BFM170822P38","fechas":"2025-08-03 a 2025-09-02","tipoComprobante":"","moneda":"","montoMin":"","montoMax":"","version":"","serie":"","formaPago":"","metodoPago":"","usoCfdi":""}
2025-09-02 18:12:08 - Es para Excel: NO
2025-09-02 18:12:08 - SQL Stats: SELECT 
                        COUNT(*) as total_cfdis,
                        SUM(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as total_facturado,
                        AVG(CASE WHEN total IS NOT NULL THEN total ELSE 0 END) as promedio_ticket,
                        tipo,
                        COUNT(*) as cantidad_por_tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin GROUP BY tipo
2025-09-02 18:12:08 - SQL Data: SELECT 
                        uuid, emision, emisor_rfc, emisor_nombre, receptor_rfc, receptor_nombre, 
                        total, moneda, tipo
                    FROM v_reporte_excel
                    WHERE uuid IS NOT NULL AND emisor_rfc = :rfc AND DATE(emision) BETWEEN :fecha_inicio AND :fecha_fin ORDER BY emision DESC LIMIT 500
2025-09-02 18:12:08 - Params: {":rfc":"BFM170822P38",":fecha_inicio":"2025-08-03",":fecha_fin":"2025-09-02"}
2025-09-02 18:12:45 - Resultados tabla: 91
2025-09-02 18:12:45 - Resultados stats: 3
2025-09-02 18:13:17 - Response preparado
